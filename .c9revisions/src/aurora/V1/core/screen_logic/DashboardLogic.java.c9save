{"ts":1351107734002,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"/*\r\n * Copyright 2012 Sardonix Creative.\r\n *\r\n * This work is licensed under the\r\n * Creative Commons Attribution-NonCommercial-NoDerivs 3.0 Unported License.\r\n * To view a copy of this license, visit\r\n *\r\n *      http://creativecommons.org/licenses/by-nc-nd/3.0/\r\n *\r\n * or send a letter to Creative Commons, 444 Castro Street, Suite 900,\r\n * Mountain View, California, 94041, USA.\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\npackage aurora.V1.core.screen_logic;\r\n\r\nimport aurora.V1.core.AuroraCoreUI;\r\nimport aurora.V1.core.AuroraStorage;\r\nimport aurora.V1.core.Game;\r\nimport aurora.V1.core.screen_handler.DashboardHandler;\r\nimport aurora.V1.core.screen_ui.DashboardUI;\r\nimport aurora.engine.V1.Logic.aXAVI;\r\nimport aurora.engine.V1.UI.aImagePane;\r\nimport java.net.MalformedURLException;\r\nimport java.util.ArrayList;\r\nimport java.util.Random;\r\nimport java.util.logging.Level;\r\nimport java.util.logging.Logger;\r\n\r\n/**\r\n * .------------------------------------------------------------------------.\r\n * | DashboardLogic\r\n * .------------------------------------------------------------------------.\r\n * |\r\n * |\r\n * | This Class is the Logic component of the Dashboard Screen. Its instanced\r\n * | In DashboardUI.\r\n * |\r\n * | This class is supposed to handle all of the Long Processing of UI or\r\n * | Actions generated by the Handler. Reusable processing and long logic\r\n * | methods should go here.\r\n * |\r\n * .........................................................................\r\n *\r\n * @author Sammy Guergachi <sguergachi at gmail.com>\r\n * <p/>\r\n */\r\npublic class DashboardLogic {\r\n\r\n    /**\r\n     * The UI Component of the Dashboard Screen.\r\n     */\r\n    private final DashboardUI dashboardUI;\r\n\r\n    /**\r\n     * The Handler Component of the Dashboard Screen.\r\n     */\r\n    private final DashboardHandler dashboardHandler;\r\n\r\n    /**\r\n     * The AuroraStorage instance from DashboardUI.\r\n     */\r\n    private final AuroraStorage storage;\r\n\r\n    /**\r\n     * The AuroraCoreUI instance from DashboardUI.\r\n     */\r\n    private final AuroraCoreUI coreUI;\r\n\r\n    /**\r\n     * .-----------------------------------------------------------------------.\r\n     * | DashboardLogic(DashboardUI)\r\n     * .-----------------------------------------------------------------------.\r\n     * |\r\n     * | This is the Constructor of the Dashboard Logic class.\r\n     * |\r\n     * | The Constructor of Screen Classes must initialize/create both a\r\n     * | Handler and a Logic object which should contain the UI as a parameter\r\n     * |\r\n     * .........................................................................\r\n     *\r\n     * @param dashboardUi DashboardUI\r\n     *\r\n     */\r\n    public DashboardLogic(final DashboardUI dashboardUi) {\r\n\r\n        this.dashboardUI = dashboardUi;\r\n        this.coreUI = dashboardUI.getCoreUI();\r\n        this.dashboardHandler = dashboardUI.getDashboardHandler();\r\n        this.storage = dashboardUI.getStorage();\r\n\r\n\r\n\r\n    }\r\n\r\n    /**\r\n     * .-----------------------------------------------------------------------.\r\n     * | getLibraryIcon()\r\n     * .-----------------------------------------------------------------------.\r\n     * |\r\n     * | This method tries to generate a random game if the storage contains\r\n     * | any games.\r\n     * |\r\n     * | If no games are found in storage it will return a simple blank case\r\n     * | icon\r\n     * |\r\n     * .........................................................................\r\n     *\r\n     * @return an ArrayList with info\r\n     */\r\n    public final aImagePane getLibraryIcon() {\r\n\r\n        aImagePane icon;\r\n\r\n        //* Double check there are no games in Storage *//\r\n        System.out.println(storage);\r\n        if (storage.getStoredLibrary().getBoxArtPath() == null || storage.\r\n                getStoredLibrary().getBoxArtPath().isEmpty()) {\r\n\r\n            //* Set icon to Blank Case *//\r\n            icon = new aImagePane(\"Blank-Case.png\",\r\n                    dashboardUI.getGameCoverWidth(), dashboardUI.\r\n                    getGameCoverHeight());\r\n\r\n        } else {\r\n            Random rand = new Random();\r\n\r\n            //* Generate random num based on number of games in storage *//\r\n            int randomNum = rand.nextInt(dashboardUI.getStorage().\r\n                    getStoredLibrary().\r\n                    getGameNames().size());\r\n\r\n            //* Get the random game *//\r\n            Game randomGame = new Game(dashboardUI.getStorage().\r\n                    getStoredLibrary().\r\n                    getBoxArtPath().\r\n                    get(randomNum), dashboardUI);\r\n            randomGame.setCoverSize(dashboardUI.getGameCoverWidth(),\r\n                    dashboardUI.getGameCoverHeight());\r\n            try {\r\n                randomGame.update();\r\n            } catch (MalformedURLException ex) {\r\n                Logger.getLogger(DashboardUI.class.getName()).log(Level.SEVERE,\r\n                        null, ex);\r\n            }\r\n\r\n            //* Disable overlay UI of Game *//\r\n            randomGame.removeInteraction();\r\n            //* Instead, when clicking on game, launch appropriate App *//\r\n            randomGame.getInteractivePane().\r\n                    addMouseListener(\r\n                    dashboardHandler.new CarouselLibraryMouseListener());\r\n\r\n            //* Now give icon the cleaned up Random game *//\r\n            icon = randomGame;\r\n        }\r\n\r\n        return icon;\r\n\r\n    }\r\n\r\n    /**\r\n     * .-----------------------------------------------------------------------.\r\n     * | createFeed(ArrayList<String>) --> ArrayList <String>\r\n     * .-----------------------------------------------------------------------.\r\n     * |\r\n     * | This method takes an array and fills it up with field for the info\r\n     * | feed to output.\r\n     * |\r\n     * | An ArrayList which should contain nothing is required and in the output\r\n     * | An ArrayList filled with latest info is given. This ArrayList should go\r\n     * | into the InfoFeed component.\r\n     * |\r\n     * | If No ArrayList is provided (null) then this method will be super smart\r\n     * | and not crash and totally be nice by creating one for you then\r\n     * | offering it to you filled with sweet info totally for free\r\n     * |\r\n     * .........................................................................\r\n     *\r\n     * @param array ArrayList\r\n     * <p/>\r\n     * @return an ArrayList with info\r\n     */\r\n    public final ArrayList<String> createFeed(final ArrayList<String> array) {\r\n\r\n        ArrayList<String> Array = null;\r\n\r\n        if (array == null) {\r\n            Array = new ArrayList<String>();\r\n        } else {\r\n            Array = array;\r\n        }\r\n\r\n        Array.add(coreUI.getVi().VI(aXAVI.inx_Welcome) + \", \");\r\n        Array.\r\n                add(\r\n                \"How are you doing Today \" + coreUI.getVi().VI(aXAVI.inx_User)\r\n                + \" We hope you enjoy this Alpha release of the Aurora Game Manager\");\r\n        Array.add(\"Make Sure You Check out the Improved Game Library!\");\r\n        Array.add(\"It can totally do stuff now!\");\r\n        Array.add(\"It only took a year or so...\");\r\n        Array.add(\"Checkout our website at auroragm.sourceforge.net \");\r\n        Array.add(\"Please feel free to contact me personally via e-mail\");\r\n        Array.add(\"> sguergachi@gmail.com < \");\r\n        Array.add(\"Let me know if you find any bugs \");\r\n        Array.add(\"I will personally attend to it that it is exterminated\");\r\n        Array.add(\"You can also contact me regarding feedback \");\r\n        Array.add(\r\n                \"I will feed on your feedback, if you know what i'm saying \");\r\n        Array.add(\r\n                \"Just so you know, I didn't put this bar here to annoy you \");\r\n        Array\r\n                .add(\r\n                \"I plan on having it show you a live feed of breaking gaming news \");\r\n        Array.add(\"As well as tracking information from your profile \");\r\n        Array.add(\"When ever the heck that gets done... \");\r\n        Array.add(\"Its gonna be awesome and super useful, I promise \");\r\n        Array\r\n                .add(\r\n                \"Just to demonstrate how useful it's going to be, why don't I teach you the alphabet? \");\r\n        Array.add(\"A B C D E F G H I J K L M N O P Q R S T U V W X Y Z \");\r\n        Array.add(\"There you go, I just thought you the ABCs! \");\r\n        Array\r\n                .add(\r\n                \"Anyways, you don't have to hang around here, just click on the library to start! \");\r\n        Array\r\n                .add(\r\n                \"Just press Enter, or, Move your mouse and click on the big thing that says 'Library' \");\r\n        Array.add(\"I can do this all day \");\r\n        Array.add(\"And all night \");\r\n        Array.add(\"Ohh, Breaking News! \");\r\n        Array.add(\"There is a new Call of Duty game coming out Next Year!!\");\r\n        Array.add(\"Totally did not see that comming...\");\r\n        Array.add(\"I wonder what's going to be in it\");\r\n        Array\r\n                .add(\r\n                \"I'm going to guess it has something to do with shooting guys with guns\");\r\n        Array\r\n                .add(\r\n                \"Well, i'm tired, keep checking the Sourceforge page for new updates\");\r\n        Array.add(\"Have fun!\");\r\n\r\n        return Array;\r\n    }\r\n}\r\n"]],"start1":0,"start2":0,"length1":0,"length2":9544}]],"length":9544}
