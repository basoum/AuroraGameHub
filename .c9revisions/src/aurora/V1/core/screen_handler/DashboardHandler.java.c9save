{"ts":1351107740739,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"/*\r\n * Copyright 2012 Sardonix Creative.\r\n *\r\n * This work is licensed under the \r\n * Creative Commons Attribution-NonCommercial-NoDerivs 3.0 Unported License.\r\n * To view a copy of this license, visit \r\n *\r\n *      http://creativecommons.org/licenses/by-nc-nd/3.0/\r\n *\r\n * or send a letter to Creative Commons, 444 Castro Street, Suite 900, \r\n * Mountain View, California, 94041, USA.\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\npackage aurora.V1.core.screen_handler;\r\n\r\nimport aurora.V1.core.screen_ui.DashboardUI;\r\nimport aurora.V1.core.screen_ui.GameLibraryUI;\r\nimport aurora.V1.core.screen_ui.GamerProfileUI;\r\nimport aurora.V1.core.screen_ui.SettingsUI;\r\nimport aurora.engine.V1.UI.aCarouselPane;\r\nimport java.awt.event.ActionEvent;\r\nimport java.awt.event.ActionListener;\r\nimport java.awt.event.KeyEvent;\r\nimport java.awt.event.KeyListener;\r\nimport java.awt.event.MouseEvent;\r\nimport java.awt.event.MouseListener;\r\nimport java.awt.event.MouseWheelEvent;\r\nimport java.awt.event.MouseWheelListener;\r\n\r\n/**\r\n *\r\n * @author Sammy Guergachi <sguergachi at gmail.com>\r\n */\r\npublic class DashboardHandler {\r\n\r\n    private final DashboardUI dashboardUI;\r\n\r\n    public DashboardHandler(DashboardUI dashboardUI) {\r\n        this.dashboardUI = dashboardUI;\r\n    }\r\n\r\n    public class RightListener implements ActionListener {\r\n\r\n\r\n        public void actionPerformed(ActionEvent e) {\r\n\r\n            dashboardUI.getCarousel().MoveLeft();\r\n\r\n\r\n        }\r\n    }\r\n\r\n    public class LeftListener implements ActionListener {\r\n\r\n\r\n\r\n        @Override\r\n        public void actionPerformed(ActionEvent e) {\r\n\r\n            dashboardUI.getCarousel().MoveRight();\r\n\r\n        }\r\n    }\r\n\r\n    public class CarouselKeyListener implements KeyListener {\r\n\r\n\r\n        @Override\r\n        public void keyTyped(KeyEvent e) {\r\n        }\r\n\r\n        @Override\r\n        public void keyPressed(KeyEvent e) {\r\n\r\n\r\n            if (e.getKeyCode() == KeyEvent.VK_LEFT) {\r\n                dashboardUI.getCarousel().MoveRight();\r\n            }\r\n\r\n            if (e.getKeyCode() == KeyEvent.VK_RIGHT) {\r\n                dashboardUI.getCarousel().MoveLeft();\r\n            }\r\n\r\n            if (e.getKeyCode() == KeyEvent.VK_ESCAPE) {\r\n                dashboardUI.getCoreUI().showExitDilog();\r\n            }\r\n        }\r\n\r\n        @Override\r\n        public void keyReleased(KeyEvent e) {\r\n\r\n            if (e.getKeyCode() == KeyEvent.VK_ENTER) {\r\n                aCarouselPane pane = dashboardUI.getCarousel().getCenterPane();\r\n\r\n                if (pane == dashboardUI.getLibraryPane()) {\r\n                    //action on click right Panel\r\n                    GameLibraryUI libraryUI = new GameLibraryUI(dashboardUI.getStartUI().getAuroraStorage(), dashboardUI, dashboardUI.getCoreUI());\r\n                    libraryUI.loadUI();\r\n                } else if (pane == dashboardUI.getProfilePane()) {\r\n                    GamerProfileUI profileUI = new GamerProfileUI(dashboardUI, dashboardUI.getCoreUI());\r\n                    profileUI.loadUI();\r\n                } else if (pane == dashboardUI.getSettingsPane()) {\r\n                    SettingsUI settingsUI = new SettingsUI(dashboardUI, dashboardUI.getCoreUI());\r\n                    settingsUI.loadUI();\r\n                } else if (pane == dashboardUI.getAuroraNetPane()) {\r\n                    // do nothing for now\r\n                }\r\n            }\r\n\r\n\r\n        }\r\n    }\r\n\r\n    public class CarouselLibraryMouseListener implements MouseListener {\r\n\r\n\r\n        @Override\r\n        public void mouseClicked(MouseEvent e) {\r\n            System.out.println(\"CLICKED\");\r\n            if (dashboardUI != null) {\r\n                GameLibraryUI libraryUI = new GameLibraryUI(dashboardUI.getStartUI().getAuroraStorage(), dashboardUI, dashboardUI.getCoreUI());\r\n                libraryUI.loadUI();\r\n            }\r\n        }\r\n\r\n        @Override\r\n        public void mousePressed(MouseEvent e) {\r\n        }\r\n\r\n        @Override\r\n        public void mouseReleased(MouseEvent e) {\r\n        }\r\n\r\n        @Override\r\n        public void mouseEntered(MouseEvent e) {\r\n        }\r\n\r\n        @Override\r\n        public void mouseExited(MouseEvent e) {\r\n        }\r\n    }\r\n\r\n    ///....Mouse Click Handlers...////////\r\n    public class CarouselPaneMouseListener implements MouseListener {\r\n\r\n\r\n        @Override\r\n        public void mouseClicked(MouseEvent e) {\r\n            System.out.println(\"CLICKED\");\r\n            aCarouselPane pane = (aCarouselPane) e.getComponent();\r\n\r\n            if (pane.getPointX() == dashboardUI.getCarousel().getRightX()) {\r\n                dashboardUI.getCarousel().MoveLeft();\r\n            } else if (pane.getPointX() == dashboardUI.getCarousel().getLeftX()) {\r\n                dashboardUI.getCarousel().MoveRight();\r\n            } else if (pane.getPointX() == dashboardUI.getCarousel().getCentX()) {\r\n                if (pane == dashboardUI.getLibraryPane()) {\r\n                    //action on click right Panel\r\n                    if (dashboardUI != null) {\r\n                        GameLibraryUI libraryUI = new GameLibraryUI(dashboardUI.getStartUI().getAuroraStorage(), dashboardUI, dashboardUI.getCoreUI());\r\n                        libraryUI.loadUI();\r\n                    }\r\n                } else if (pane == dashboardUI.getProfilePane()) {\r\n                    GamerProfileUI profileUI = new GamerProfileUI(dashboardUI, dashboardUI.getCoreUI());\r\n                    profileUI.loadUI();\r\n                } else if (pane == dashboardUI.getSettingsPane()) {\r\n                    SettingsUI settingsUI = new SettingsUI(dashboardUI, dashboardUI.getCoreUI());\r\n                    settingsUI.loadUI();\r\n                } else if (pane == dashboardUI.getAuroraNetPane()) {\r\n                    // do nothing for now\r\n                }\r\n            }\r\n        }\r\n\r\n        @Override\r\n        public void mousePressed(MouseEvent e) {\r\n        }\r\n\r\n        @Override\r\n        public void mouseReleased(MouseEvent e) {\r\n        }\r\n\r\n        @Override\r\n        public void mouseEntered(MouseEvent e) {\r\n        }\r\n\r\n        @Override\r\n        public void mouseExited(MouseEvent e) {\r\n        }\r\n    }\r\n\r\n    public class carouselPaneMouseWheelListener implements MouseWheelListener {\r\n\r\n\r\n        @Override\r\n        public void mouseWheelMoved(MouseWheelEvent e) {\r\n\r\n\r\n            int numberClicks = e.getWheelRotation();\r\n            System.out.println(\"Mouse wheel moved \" + numberClicks);\r\n\r\n            if (numberClicks < 0) {\r\n                dashboardUI.getCarousel().MoveLeft();\r\n            } else if (numberClicks > 0) {\r\n                dashboardUI.getCarousel().MoveRight();\r\n            }\r\n\r\n        }\r\n    }\r\n}\r\n"]],"start1":0,"start2":0,"length1":0,"length2":6931}]],"length":6931}
{"contributors":[],"silentsave":false,"ts":1351107555932,"patch":[[{"diffs":[[0,"nder the"],[-1," "],[0,"\r\n * Cre"]],"start1":72,"start2":72,"length1":17,"length2":16},{"diffs":[[0,"e, visit"],[-1," "],[0,"\r\n *\r\n *"]],"start1":192,"start2":192,"length1":17,"length2":16},{"diffs":[[0,"ite 900,"],[-1," "],[0,"\r\n * Mou"]],"start1":331,"start2":331,"length1":17,"length2":16}]],"length":6928,"saved":false}
{"ts":1351107605551,"patch":[[{"diffs":[[0,"Dilog();"],[1," "],[0,"\r\n      "]],"start1":2527,"start2":2527,"length1":16,"length2":17}]],"length":6929,"saved":false}
{"ts":1351107609290,"patch":[[{"diffs":[[0," {\r\n"],[-1,"                dashboardUI.getCoreUI().showExitDilog(); \r\n"],[0,"    "]],"start1":2475,"start2":2475,"length1":67,"length2":8}]],"length":6870,"saved":false}
{"ts":1351107612017,"patch":[[{"diffs":[[0,"_ESCAPE) {\r\n"],[1,"                dashboardUI.getCoreUI().showExitDilog(); \r\n"],[0,"            "]],"start1":2467,"start2":2467,"length1":24,"length2":83}]],"length":6929,"saved":false}
