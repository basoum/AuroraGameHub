{"ts":1351698004341,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"/*\n * Copyright 2012 Sardonix Creative.\n *\n * This work is licensed under the\n * Creative Commons Attribution-NonCommercial-NoDerivs 3.0 Unported License.\n * To view a copy of this license, visit\n *\n *      http://creativecommons.org/licenses/by-nc-nd/3.0/\n *\n * or send a letter to Creative Commons, 444 Castro Street, ScoreUIte 900,\n * Mountain View, California, 94041, USA.\n * Unless reqcoreUIred by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage aurora.V1.core.screen_ui;\n\nimport aurora.V1.core.*;\nimport aurora.V1.core.screen_handler.GameLibraryHandler;\nimport aurora.V1.core.screen_handler.GameLibraryHandler.AddGameHandler;\nimport aurora.V1.core.screen_handler.GameLibraryHandler.GameLibraryKeyListener;\nimport aurora.V1.core.screen_handler.GameLibraryHandler.HoverButtonLeft;\nimport aurora.V1.core.screen_handler.GameLibraryHandler.HoverButtonRight;\nimport aurora.V1.core.screen_handler.GameLibraryHandler.MoveToLastGrid;\nimport aurora.V1.core.screen_handler.GameLibraryHandler.searchBoxHandler;\nimport aurora.V1.core.screen_handler.GameLibraryHandler.searchFocusHandler;\nimport aurora.V1.core.screen_ui.DashboardUI;\nimport aurora.engine.V1.Logic.*;\nimport aurora.engine.V1.UI.*;\nimport java.awt.*;\nimport java.awt.event.ActionListener;\nimport java.lang.reflect.Field;\nimport java.net.MalformedURLException;\nimport java.sql.SQLException;\nimport java.util.ArrayList;\nimport java.util.logging.Level;\nimport java.util.logging.Logger;\nimport javax.swing.*;\n\n/**\n *\n * @author Sammy, Carlos\n * @version 0.5\n */\npublic class GameLibraryUI extends AuroraApp {\n\n    private AButton ZoomP;\n    private AButton ZoomM;\n    private ArrayList<AImagePane> gameCover;\n    private int zoom;\n    private JPanel GameBack;\n    private AImage imgFavorite;\n    private AHoverButton imgGameRight;\n    private GridManager GridSplit;\n    private AHoverButton imgGameLeft;\n    private int currentIndex;\n    private ActionListener a;\n    private int currentPanel;\n    private ArrayList<Boolean> loadedPanels;\n    public static int SIZE_GameCoverHeight;\n    public static int SIZE_GameCoverWidth;\n    public static int SIZE_ZoomButtonHeight;\n    public static int SIZE_SelectedGameBarHeight;\n    public static int SIZE_SelectedGameBarWidth;\n    public static int SIZE_AddGameWidth;\n    public static int SIZE_AddGameHeight;\n    public static int SIZE_GameNameFont;\n    private GridAnimation GridAnimate;\n    private AImagePane imgSelectedGamePane;\n    public static JLabel lblGameName;\n    private AImage imgKeyIco;\n    private JLabel lblKeyAction;\n    private AButton btnAddGame;\n    private JPanel SelectedGameContainer;\n    private AImagePane SearchBarBG;\n    private JTextField gridSearchBar;\n    private JPanel SearchPane;\n    private JPanel TextPane;\n    private AImagePane SearchButtonBG;\n    private AButton SearchButton;\n    private JPanel SearchContainer;\n    private JPanel ButtonPane;\n    private int SIZE_FramePanePadding;\n    private GameLibraryHandler handler;\n    private GridSearch Search;\n    private AImage imgBlank;\n    private ASimpleDB CoverDB;\n    private AddGameHandler addGameHandler;\n    private AImagePane addGamePane;\n    private AAnimate addGameAnimator;\n    private AButton btnCloseAddUI;\n    private JPanel topPane;\n    private AImagePane searchBG;\n    private AImagePane searchArrow;\n    private AImagePane searchBox;\n    private AImagePane bottomPane;\n    private JPanel centerPane;\n    private JLabel lblAddTitle;\n    private JTextField gameSearchBar;\n    private JPanel addSearchContainer;\n    private JPanel bottomTop;\n    private JPanel TopCenterPane;\n    private JPanel LeftTopCenter;\n    private JPanel RightTopCenter;\n    private AImage stepOne;\n    private AImage stepTwo;\n    private JLabel lblLeftTitle;\n    private JLabel lblRightTitle;\n    private AImagePane coverPane;\n    private AImagePane coverGame;\n    private JPanel BottomCenterPane;\n    private JPanel LeftBottomCenter;\n    private JPanel RightBottomCenter;\n    private JPanel ContentPane;\n    private GameSearch GameSearch;\n    private searchBoxHandler searchBoxHandler;\n    private searchFocusHandler searchFocusHandler;\n    private boolean addGameUI_Visible = false;\n    private JList gamesList;\n    private JScrollPane gameScrollPane;\n    private JFileChooser gameLocator;\n    private DefaultListModel listModel;\n    private JPanel RightBottomContainer;\n    private String currentPath;\n    private AButton addGameToLibButton;\n    private AAnimate addGameToLibButtonAnimator;\n    private AuroraStorage storage;\n    private HoverButtonLeft MoveLibraryLeftHandler;\n    private HoverButtonRight MoveLibraryRightHandler;\n    private MoveToLastGrid GridMove;\n    private boolean isAddGameUILoaded = false;\n    private boolean isGameLibraryKeyListenerAdded;\n    private int SIZE_SearchBarWidth;\n    private AButton removeSearchButton;\n    private final DashboardUI dashboardUI;\n    private final AuroraCoreUI coreUI;\n\n    public GameLibraryUI(AuroraStorage storage\n            ,final DashboardUI dashboardUi\n            ,final AuroraCoreUI auroraCoreUI) {\n        this.coreUI = auroraCoreUI;\n        this.storage = storage;\n        this.dashboardUI = dashboardUi;\n        this.handler = new GameLibraryHandler();\n        this.clearUI_Forwards();\n        isGameLibraryKeyListenerAdded = false;\n\n    }\n\n    public void setSize() {\n\n        int Ratio = (coreUI.getFrame().getWidth() - coreUI.getFrame().getHeight()) / 2;\n        System.out.println(\"Ratio \" + Ratio);\n        System.out.println(\"Height \" + coreUI.getFrame().getHeight());\n        System.out.println(\"Width \" + coreUI.getFrame().getWidth());\n        if (coreUI.isLargeScreen()) {\n            SIZE_GameCoverHeight = coreUI.getFrame().getHeight() / 3 - (Ratio / 10) + 5;\n            SIZE_GameCoverWidth = coreUI.getFrame().getWidth() / 5 - (Ratio / 10) - 5;\n            SIZE_ZoomButtonHeight = 30;\n            SIZE_SelectedGameBarHeight = 65;\n            SIZE_SelectedGameBarWidth = 380;\n            SIZE_AddGameWidth = 351;\n            SIZE_AddGameHeight = 51;\n            SIZE_GameNameFont = 35;\n            SIZE_FramePanePadding = 20;\n            SIZE_SearchBarWidth = 880;\n\n        } else {\n            SIZE_FramePanePadding = 10;\n            SIZE_GameCoverHeight = coreUI.getFrame().getHeight() / 3 - (Ratio / 10);\n            SIZE_GameCoverWidth = coreUI.getFrame().getWidth() / 5 - (Ratio / 10);\n            SIZE_ZoomButtonHeight = 25;\n            SIZE_AddGameWidth = 300;\n            SIZE_AddGameHeight = 40;\n            SIZE_SelectedGameBarHeight = 60;\n            SIZE_SelectedGameBarWidth = 360;\n            SIZE_GameNameFont = 32;\n            SIZE_SearchBarWidth = coreUI.getFrame().getWidth() / 2 + coreUI.getControlWidth() / 2;\n        }\n\n\n    }\n\n    @Override\n    public final void loadUI() {\n\n        ///...SET UP\n        setSize();\n\n\n        ///... setup\n        coreUI.getInfoLabel().setText(\"   Loading...   \");\n        coreUI.getCenterPanel().repaint();\n\n        ///...Create Components\n\n        ///Panel Containing Arrow Buttons and GameCover Panel\n        GameBack = new JPanel(true);\n        GameBack.setOpaque(false);\n        GameBack.setLayout(new BorderLayout(5, 5)); //Inital Size = 10 Games\n\n\n\n        imgFavorite = new AImage(\"Aurora_Favorite.png\");\n        imgBlank = new AImage(\"Aurora_Blank.png\");\n\n\n        MoveLibraryLeftHandler = handler.new HoverButtonLeft(this, coreUI);\n        MoveLibraryRightHandler = handler.new HoverButtonRight(this, coreUI);\n\n        imgGameRight = new AHoverButton(MoveLibraryRightHandler, 3, \"Aurora_RightLib_normal.png\", \"Aurora_RightLib_over.png\");\n        imgGameLeft = new AHoverButton(MoveLibraryLeftHandler, 3, \"Aurora_LeftLib_normal.png\", \"Aurora_LeftLib_over.png\");\n        GridMove = handler.new MoveToLastGrid(this);\n\n        //...Zoom Buttons\n        ZoomP = new AButton(\"Aurora_ZoomP_normal.png\", \"Aurora_ZoomP_down.png\", \"Aurora_ZoomP_over.png\", 0, SIZE_ZoomButtonHeight);\n        ZoomM = new AButton(\"Aurora_ZoomM_normal.png\", \"Aurora_ZoomM_down.png\", \"Aurora_ZoomM_over.png\", 0, SIZE_ZoomButtonHeight);\n\n        //Add Zoom Buttons\n        coreUI.getInfoPanel().removeAll();\n\n        coreUI.getInfoPanel().add(ZoomM);\n        coreUI.getInfoPanel().add(coreUI.getInfoLabel());\n        coreUI.getInfoPanel().add(ZoomP);\n\n\n        //Key Actions Panel\n\n        imgKeyIco = new AImage(\"KeyboardKeys/arrows.png\", coreUI.getKeyIconWidth(), coreUI.getKeyIconHeight());\n        lblKeyAction = new JLabel(\" Move \");\n        lblKeyAction.setFont(coreUI.getDefaultFont().deriveFont(Font.PLAIN, coreUI.getKeysFontSize()));\n        lblKeyAction.setForeground(Color.YELLOW);\n        coreUI.getKeyToPressPanel().add(coreUI.getKeyIconImage());\n        coreUI.getKeyToPressPanel().add(coreUI.getKeyActionLabel());\n        coreUI.getKeyToPressPanel().add(imgKeyIco);\n        coreUI.getKeyToPressPanel().add(lblKeyAction);\n        coreUI.getHeaderOfCenterFromBottomPanel().setPreferredSize(new Dimension(coreUI.getFrame().getWidth(), 5));\n        coreUI.getHeaderOfCenterFromBottomPanel().revalidate();\n\n        ///Selected GameCover Bar\n\n        SelectedGameContainer = new JPanel();\n        SelectedGameContainer.setOpaque(false);\n\n        imgSelectedGamePane = new AImagePane(\"Aurora_SelectedGameBar.png\", SIZE_SelectedGameBarWidth, SIZE_SelectedGameBarHeight,\n                new FlowLayout(FlowLayout.CENTER, 0, 5));\n\n        imgSelectedGamePane.setPreferredSize(new Dimension(SIZE_SelectedGameBarWidth, SIZE_SelectedGameBarHeight));\n        //imgSelectedGamePane.setOpaque(true);\n\n\n        lblGameName = new JLabel(\"Select A Game For Info\");\n        lblGameName.setOpaque(false);\n        lblGameName.setFont(coreUI.getDefaultFont().deriveFont(Font.PLAIN, SIZE_GameNameFont));\n        lblGameName.setForeground(Color.LIGHT_GRAY);\n\n        //Add game Name Lable\n        imgSelectedGamePane.add(lblGameName);\n        SelectedGameContainer.add(imgSelectedGamePane);\n\n\n        ////Add Game Button\n        //TODO needs a container\n        JPanel container = new JPanel(new BorderLayout());\n        container.setOpaque(false);\n        addGameHandler = handler.new AddGameHandler(this);\n\n        btnAddGame = new AButton(\"Aurora_Add_normal.png\", \"Aurora_Add_down.png\", \"Aurora_Add_over.png\", SIZE_AddGameWidth, SIZE_AddGameHeight);\n        btnAddGame.addActionListener(addGameHandler);\n\n\n        container.add(btnAddGame, BorderLayout.CENTER);\n\n\n        coreUI.getUserSpacePanel().setLayout(new BorderLayout());\n        coreUI.getUserSpacePanel().setVisible(true);\n        coreUI.getUserSpacePanel().add(container);\n\n\n        //Center Bottom\n\n        coreUI.getCenterFromBottomPanel().setLayout(new BorderLayout());\n        coreUI.getCenterFromBottomPanel().add(BorderLayout.CENTER, SelectedGameContainer);\n        coreUI.getCenterFromBottomPanel().add(BorderLayout.SOUTH, coreUI.getUserSpacePanel());\n\n        //Search Bar\n\n\n        SearchBarBG = new AImagePane(\"SearchBar_inactive.png\", new BorderLayout());\n        SearchBarBG.setPreferredSize(new Dimension(SIZE_SearchBarWidth, 50));\n\n        removeSearchButton = new AButton(\"SearchButtonBack_up.png\", \"SearchButtonBack_down.png\", \"SearchButtonBack_over.png\");\n        removeSearchButton.setPreferredSize(new Dimension(70, 51));\n\n        gridSearchBar = new JTextField(\"Start Typing To Search...\");\n        gridSearchBar.setOpaque(false);\n        gridSearchBar.setBorder(null);\n        gridSearchBar.setColumns(19);\n        gridSearchBar.setForeground(Color.darkGray);\n        gridSearchBar.setFont(coreUI.getDefaultFont().deriveFont(Font.BOLD, 40));\n        gridSearchBar.setPreferredSize(new Dimension(880, 50));\n\n\n\n        SearchButton = new AButton(\"SearchButton_up.png\", \"SearchButton_down.png\", \"SearchButton_over.png\");\n        SearchButton.setPreferredSize(new Dimension(70, 51));\n        SearchButton.addActionListener(handler.new searchButtonHandler(this));\n\n        SearchButtonBG = new AImagePane(\"SearchButtonBG.png\", new BorderLayout());\n        SearchButtonBG.setPreferredSize(new Dimension(70, 51));\n        SearchButtonBG.add(SearchButton, BorderLayout.NORTH);\n\n\n        TextPane = new JPanel(new BorderLayout());\n        TextPane.setOpaque(false);\n        TextPane.add(gridSearchBar, BorderLayout.NORTH);\n\n        ///     +\n\n        ButtonPane = new JPanel(new BorderLayout());\n        ButtonPane.setOpaque(false);\n        ButtonPane.add(SearchButtonBG, BorderLayout.NORTH);\n\n\n        ///   =\n\n        SearchContainer = new JPanel(new BorderLayout());\n        SearchContainer.setOpaque(false);\n        SearchContainer.add(ButtonPane, BorderLayout.WEST);\n        SearchContainer.add(TextPane, BorderLayout.CENTER);\n\n\n        SearchBarBG.add(SearchContainer, BorderLayout.WEST);\n        SearchBarBG.validate();\n\n        SearchPane = new JPanel(new BorderLayout());\n        SearchPane.setOpaque(false);\n        SearchPane.add(SearchBarBG, BorderLayout.EAST);\n        SearchPane.setPreferredSize(new Dimension(SearchPane.getBounds().width, 75));\n        SearchPane.validate();\n\n\n        coreUI.getSouthFromTopPanel().add(BorderLayout.CENTER, SearchPane);\n        coreUI.getSouthFromTopPanel().setPreferredSize(\n                new Dimension(coreUI.getSouthFromTopPanel().getWidth(), coreUI.getFrameControlImagePane().getHeight()));\n\n        ///Search Bar Auto Focus//\n        ////Search Backend////\n\n        Search = new GridSearch(coreUI, this, GridSplit);\n\n        //Handle Search Queries\n        searchBoxHandler = handler.new searchBoxHandler(this);\n        searchFocusHandler = handler.new searchFocusHandler(this);\n        gridSearchBar.addKeyListener(searchBoxHandler);\n        gridSearchBar.addFocusListener(searchFocusHandler);\n        gridSearchBar.addMouseListener(handler.new searchSelectHandler(this));\n\n        //TODO PUT IN SEPERATE METHOD\n\n        coreUI.getFrame().addKeyListener(handler.new searchRefocusListener(this));\n        coreUI.getFrame().addKeyListener(handler.new GameLibraryKeyListener(this, coreUI));\n        coreUI.getFrame().addMouseWheelListener(handler.new GridMouseWheelListener(this));\n\n        coreUI.getBackgroundImagePane().addKeyListener(handler.new searchRefocusListener(this));\n        coreUI.getBackgroundImagePane().addKeyListener(handler.new GameLibraryKeyListener(this, coreUI));\n        coreUI.getBackgroundImagePane().addMouseWheelListener(handler.new GridMouseWheelListener(this));\n\n        coreUI.getBottomImagePane().addKeyListener(handler.new searchRefocusListener(this));\n        coreUI.getBottomImagePane().addKeyListener(handler.new GameLibraryKeyListener(this, coreUI));\n        coreUI.getBottomImagePane().addMouseWheelListener(handler.new GridMouseWheelListener(this));\n\n        coreUI.getCenterPanel().addKeyListener(handler.new searchRefocusListener(this));\n        coreUI.getCenterPanel().addKeyListener(handler.new GameLibraryKeyListener(this, coreUI));\n        coreUI.getCenterPanel().addMouseWheelListener(handler.new GridMouseWheelListener(this));\n\n        coreUI.getSouthFromTopPanel().addKeyListener(handler.new searchRefocusListener(this));\n        coreUI.getSouthFromTopPanel().addKeyListener(handler.new GameLibraryKeyListener(this, coreUI));\n        coreUI.getSouthFromTopPanel().addMouseWheelListener(handler.new GridMouseWheelListener(this));\n\n        coreUI.getFrameControlImagePane().addKeyListener(handler.new searchRefocusListener(this));\n        coreUI.getFrameControlImagePane().addKeyListener(handler.new GameLibraryKeyListener(this, coreUI));\n        coreUI.getFrameControlImagePane().addMouseWheelListener(handler.new GridMouseWheelListener(this));\n\n        coreUI.getTopImagePane().addKeyListener(handler.new searchRefocusListener(this));\n        coreUI.getTopImagePane().addKeyListener(handler.new GameLibraryKeyListener(this, coreUI));\n        coreUI.getTopImagePane().addMouseWheelListener(handler.new GridMouseWheelListener(this));\n\n        this.btnAddGame.addKeyListener(handler.new searchRefocusListener(this));\n        this.btnAddGame.addKeyListener(handler.new GameLibraryKeyListener(this, coreUI));\n\n        this.GameBack.addKeyListener(handler.new searchRefocusListener(this));\n        this.GameBack.addKeyListener(handler.new GameLibraryKeyListener(this, coreUI));\n\n        this.imgSelectedGamePane.addKeyListener(handler.new searchRefocusListener(this));\n        this.imgSelectedGamePane.addKeyListener(handler.new GameLibraryKeyListener(this, coreUI));\n\n        this.imgGameLeft.addKeyListener(handler.new searchRefocusListener(this));\n        this.imgGameLeft.addKeyListener(handler.new GameLibraryKeyListener(this, coreUI));\n\n        this.imgGameRight.addKeyListener(handler.new searchRefocusListener(this));\n        this.imgGameRight.addKeyListener(handler.new GameLibraryKeyListener(this, coreUI));\n\n\n        //Add to Volatile Listeners Array List\n\n        addToVolatileListenerBank(gridSearchBar);\n        addToVolatileListenerBank(coreUI.getBackgroundImagePane());\n        addToVolatileListenerBank(coreUI.getBottomImagePane());\n        addToVolatileListenerBank(coreUI.getCenterPanel());\n        addToVolatileListenerBank(coreUI.getSouthFromTopPanel());\n        addToVolatileListenerBank(coreUI.getFrameControlImagePane());\n        addToVolatileListenerBank(coreUI.getTopImagePane());\n        addToVolatileListenerBank(this.btnAddGame);\n        addToVolatileListenerBank(this.GameBack);\n        addToVolatileListenerBank(this.imgSelectedGamePane);\n        addToVolatileListenerBank(this.imgGameLeft);\n        addToVolatileListenerBank(this.imgGameRight);\n\n\n        coreUI.getFrame().requestFocus();\n\n\n        /////---ADD TO UI END\n\n\n        //Start Aurora Dabatase connection\n        try {\n            CoverDB = new ASimpleDB(\"AuroraDB\", \"AuroraTable\", false);\n        } catch (SQLException ex) {\n            Logger.getLogger(GameLibraryUI.class.getName()).log(Level.SEVERE, null, ex);\n        }\n\n        GridSplit = new GridManager(2, 4, coreUI);\n\n        GridSplit.initiateGrid(0);\n\n        //Grid Animator\n        this.GridAnimate = new GridAnimation(GridSplit, GameBack);\n\n        int width = SIZE_GameCoverWidth;\n        int height = SIZE_GameCoverHeight;\n\n\n\n\n        ////////////////////////\n        //ADD GAMES TO LIBRARY//\n        ////////////////////////\n\n\n        try {\n\n            //ADD FAVOURITE GAMES FIRST\n\n            for (int i = 0; i < storage.getStoredLibrary().getGameNames().size(); i++) {\n\n\n\n                Game Game = new Game(GridSplit, coreUI, dashboardUI, storage);\n                if (storage.getStoredLibrary().getFaveStates().get(i)) {\n                    Game.setGameName(storage.getStoredLibrary().getGameNames().get(i));\n                    Game.setCoverUrl(storage.getStoredLibrary().getBoxArtPath().get(i));\n                    //Handle appostrophese in game path\n                    Game.setGamePath(storage.getStoredLibrary().getGamePath().get(i).replace(\"'\", \"''\"));\n                    Game.setFavorite(storage.getStoredLibrary().getFaveStates().get(i));\n                    Game.setCoverSize(SIZE_GameCoverWidth, SIZE_GameCoverHeight);\n\n                    GridSplit.addGame(Game);\n                }\n            }\n\n            //ADD NON-FAVOURITE GAMES LAST\n\n            for (int i = 0; i < storage.getStoredLibrary().getGameNames().size(); i++) {\n\n                Game Game = new Game(GridSplit, coreUI, dashboardUI, storage);\n                if (!storage.getStoredLibrary().getFaveStates().get(i)) {\n                    Game.setGameName(storage.getStoredLibrary().getGameNames().get(i));\n                    Game.setCoverUrl(storage.getStoredLibrary().getBoxArtPath().get(i));\n                    //Handle appostrophese in game path\n                    Game.setGamePath(storage.getStoredLibrary().getGamePath().get(i).replace(\"'\", \"''\"));\n                    Game.setFavorite(storage.getStoredLibrary().getFaveStates().get(i));\n                    Game.setCoverSize(SIZE_GameCoverWidth, SIZE_GameCoverHeight);\n\n                    GridSplit.addGame(Game);\n                }\n            }\n\n            GridSplit.finalizeGrid(addGameHandler, width, height);\n\n            //Load First Grid by default\n            load(0);\n        } catch (MalformedURLException ex) {\n            System.out.println(\"MalformedURLExeption \\n\" + ex);\n        }\n\n\n\n\n        ///...Add To UI\n\n        GameBack.add(BorderLayout.WEST, imgFavorite);\n        GameBack.add(BorderLayout.CENTER, GridSplit.getGrid(0));\n        GameBack.add(BorderLayout.EAST, imgGameRight);\n\n\n\n        //add Grid\n        coreUI.getCenterPanel().add(BorderLayout.CENTER, GameBack);\n        coreUI.getCenterPanel().repaint();\n\n        //Finalize\n        coreUI.getInfoLabel().setText(\"   Game Library   \");\n\n    }\n\n\n\n    /**\n     * SmartLoad GameCover Covers to minimize memory usage through burst loading\n     *\n     */\n    public void load(int currentIndex) throws MalformedURLException {\n\n        System.out.println(\"LAUNCHING LOAD METHOD\");\n        currentPanel = (currentIndex);\n        if (currentPanel < 0) {\n            currentPanel = 0;\n        }\n        System.out.println(\"current panel: \" + currentPanel);\n\n\n\n        //Load First Panels\n\n        isGameLibraryKeyListenerAdded = false;\n        for (int i = 0; i < GridSplit.getGrid(currentPanel).getArray().size(); i++) {\n            Game game = new Game(GridSplit, coreUI, dashboardUI);\n            try {\n                game = (Game) GridSplit.getGrid(currentPanel).getArray().get(i);\n                game.addKeyListener(handler.new searchRefocusListener(this));\n\n                for (int j = 0; j < game.getKeyListeners().length; j++) {\n                    //  if (game.getKeyListeners()[j] instanceof GameLibraryUI.GameLibraryKeyListener) {\n                    if (game.getKeyListeners()[j] instanceof GameLibraryKeyListener) {\n                        isGameLibraryKeyListenerAdded = true;\n                        break;\n                    }\n                }\n\n                if (!isGameLibraryKeyListenerAdded) {\n                    System.out.println(\"ADDING GAMELIBRARYLISTENER TO \" + game.getName());\n                    //  game.addKeyListener(new GameLibraryUI.GameLibraryKeyListener());\n                    game.addKeyListener(handler.new GameLibraryKeyListener(this, coreUI));\n                }\n\n\n                if (!game.isLoaded()) {\n                    game.update();\n\n                    System.out.println(\"loading: \" + game.getGameName());\n                }\n            } catch (RuntimeException ex) {\n            }\n        }\n\n\n        isGameLibraryKeyListenerAdded = false;\n        //Load Second Panel if exists -- SMART LOAD\n        if (currentPanel < GridSplit.getArray().size() - 1) {\n            for (int i = 0; i < GridSplit.getGrid(currentPanel + 1).getArray().size(); i++) {\n                Game game = new Game(GridSplit, coreUI, dashboardUI);\n                try {\n                    game = (Game) GridSplit.getGrid(currentPanel + 1).getArray().get(i);\n\n                    for (int j = 0; j < game.getKeyListeners().length; j++) {\n                        //   if (game.getKeyListeners()[j] instanceof GameLibraryUI.GameLibraryKeyListener) {\n                        if (game.getKeyListeners()[j] instanceof GameLibraryKeyListener) {\n                            isGameLibraryKeyListenerAdded = true;\n                            break;\n                        }\n                    }\n\n                    if (!isGameLibraryKeyListenerAdded) {\n                        System.out.println(\"ADDING GAMELIBRARYLISTENER TO\" + game.getName());\n                        // game.addKeyListener(new GameLibraryUI.GameLibraryKeyListener());\n                        game.addKeyListener(handler.new GameLibraryKeyListener(this, coreUI));\n                    }\n                    if (!game.isLoaded()) {\n                        game.update();\n                        System.out.println(\"Secondary loading: \" + game.getName());\n                    }\n                } catch (RuntimeException ex) {\n                }\n\n\n            }\n        }\n    }\n\n     @Override\n    public void buildUI() {\n\n     /*\n      *\n      * TODO, ADD BUILD PART OF UI CODE HERE\n      *\n      */\n     }\n\n    public final void setAddGameUI() {\n\n        if (!isAddGameUILoaded) {\n\n            /////////////////////\n            //Create Components//\n            /////////////////////\n\n\n            ////ADD GAME UI////\n            JPanel glass = (JPanel) coreUI.getFrame().getGlassPane();\n            addGamePane = new AImagePane(\"Aurora_AddGame_BG.png\", new BorderLayout());\n\n            ////TOP PANEL COMPONENTS ////\n            //Major Panels\n            topPane = new JPanel(new BorderLayout());\n            topPane.setOpaque(false);\n            //UI components\n            btnCloseAddUI = new AButton(\"Aurora_Close_normal.png\", \"Aurora_Close_down.png\", \"Aurora_Close_over.png\");\n\n\n            ////CENTRAL PANEL COMPONENTS ////\n            //Major Panels\n            centerPane = new JPanel(new BorderLayout());\n            centerPane.setOpaque(false);\n            TopCenterPane = new JPanel(new BorderLayout());\n            TopCenterPane.setOpaque(false);\n            LeftTopCenter = new JPanel(new FlowLayout(FlowLayout.LEFT));\n            LeftTopCenter.setOpaque(false);\n            RightTopCenter = new JPanel(new FlowLayout(FlowLayout.LEFT));\n            RightTopCenter.setOpaque(false);\n            LeftBottomCenter = new JPanel(new FlowLayout(FlowLayout.LEFT, 0, 0));\n            LeftBottomCenter.setOpaque(false);\n            RightBottomCenter = new JPanel();\n            RightBottomCenter.setOpaque(true);\n            RightBottomContainer = new JPanel(new BorderLayout());\n            RightBottomContainer.setOpaque(false);\n            ContentPane = new JPanel(new BorderLayout(0, 0));\n            ContentPane.setOpaque(false);\n            //UI Components\n            lblLeftTitle = new JLabel(\"Name\");\n            lblRightTitle = new JLabel(\"Location\");\n            stepOne = new AImage(\"AddGame_step1_normal.png\");\n            stepTwo = new AImage(\"AddGame_step2_normal.png\");\n            coverPane = new AImagePane(\"AddGame_CoverBG.png\", new BorderLayout());\n            coverGame = new AImagePane(\"Blank-Case.png\", 220, 250);\n            gamesList = new JList();\n            gameLocator = new JFileChooser(System.getProperty(\"user.home\"));\n\n\n\n            ////BOTTOM PANEL COMPONENTS ////\n            //Major Panels\n            bottomPane = new AImagePane(\"AddGame_BottomBar.png\", new BorderLayout());\n            bottomTop = new JPanel(new FlowLayout(FlowLayout.CENTER));\n            bottomTop.setOpaque(false);\n            BottomCenterPane = new JPanel(new BorderLayout());\n            BottomCenterPane.setOpaque(false);\n            //UI Components\n            searchBG = new AImagePane(\"AddGame_SearchBG.png\", new BorderLayout());\n            searchArrow = new AImagePane(\"AddGame_SearchArrow_light.png\", new BorderLayout());\n            searchBox = new AImagePane(\"AddGame_SearchBox.png\", new BorderLayout());\n            gameSearchBar = new JTextField(\"Search For Game To Add...\");\n            lblAddTitle = new JLabel(\"GAME NAME\");\n            addSearchContainer = new JPanel(new FlowLayout(FlowLayout.CENTER));\n            addSearchContainer.setOpaque(false);\n            //Other components\n            GameSearch = new GameSearch(this, CoverDB, storage);\n            addGameToLibButton = new AButton(\"AddGame_AddToLib_normal.png\", \"AddGame_AddToLib_down.png\", \"AddGame_AddToLib_over.png\");\n            addGameToLibButton.setVisible(false);\n            addGameToLibButtonAnimator = new AAnimate(addGameToLibButton);\n\n\n            /////////////////////\n            //Set up Components//\n            /////////////////////\n\n\n            ////CENTRAL PANEL COMPONENTS ////\n            ///Set Up Title labels for both Left and Right side of the Central Panel\n            lblLeftTitle.setFont(coreUI.getDefaultFont().deriveFont(Font.BOLD, 32));\n            lblRightTitle.setFont(coreUI.getDefaultFont().deriveFont(Font.BOLD, 32));\n            ///Set Up 2 Panels containing the Left and Right titles at the top of the Content panel\n            LeftTopCenter.setPreferredSize(new Dimension(addGamePane.getImgIcon().getIconWidth() / 2, 75));\n            RightTopCenter.setPreferredSize(new Dimension(addGamePane.getImgIcon().getIconWidth() / 2, 75));\n            //SET Up Content Panels\n            LeftBottomCenter.setPreferredSize(new Dimension(490, coverPane.getImgIcon().getIconHeight()));\n            RightBottomCenter.setPreferredSize(new Dimension(490, coverPane.getImgIcon().getIconHeight()));\n            RightBottomCenter.setBackground(Color.DARK_GRAY);\n            RightBottomContainer.setPreferredSize(new Dimension(500, coverPane.getImgIcon().getIconHeight()));\n            //Set Up Panels containing the Game Cover Art\n            coverPane.setPreferredSize(new Dimension(coverPane.getImgIcon().getIconWidth(), coverPane.getImgIcon().getIconHeight()));\n            coverGame.setPreferredSize(new Dimension(220, 260));\n            //Set up List\n            gamesList.setPreferredSize(new Dimension(coverPane.getImgIcon().getIconWidth() + 80, coverPane.getImgIcon().getIconHeight()));\n            gamesList.setBackground(Color.DARK_GRAY);\n            gamesList.setForeground(Color.lightGray);\n            gamesList.setFont(coreUI.getDefaultFont().deriveFont(Font.BOLD, 19));\n            gamesList.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);\n            gamesList.setLayoutOrientation(JList.VERTICAL);\n            gamesList.setVisibleRowCount(10);\n            //List model for JList\n            listModel = new DefaultListModel();\n            gamesList.setModel(listModel);\n\n\n\n            //Set up File Chooser UI\n            UIManager.put(\"Viewport.background\", Color.GRAY);\n            UIManager.put(\"Viewport.foreground\", Color.WHITE);\n            UIManager.put(\"ScrollPane.background\", Color.GRAY);\n            UIManager.put(\"ComboBox.background\", Color.LIGHT_GRAY);\n            UIManager.put(\"ScrollBar.background\", Color.GRAY);\n            UIManager.put(\"Panel.background\", Color.GRAY);\n            UIManager.put(\"Panel.forground\", Color.WHITE);\n            UIManager.put(\"TextField.foreground\", Color.WHITE);\n            UIManager.put(\"TextField.background\", Color.DARK_GRAY);\n//            try {\n//                UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());\n//            } catch (ClassNotFoundException ex) {\n//                Logger.getLogger(GameLibraryUI.class.getName()).log(Level.SEVERE, null, ex);\n//            } catch (InstantiationException ex) {\n//                Logger.getLogger(GameLibraryUI.class.getName()).log(Level.SEVERE, null, ex);\n//            } catch (IllegalAccessException ex) {\n//                Logger.getLogger(GameLibraryUI.class.getName()).log(Level.SEVERE, null, ex);\n//            } catch (UnsupportedLookAndFeelException ex) {\n//                Logger.getLogger(GameLibraryUI.class.getName()).log(Level.SEVERE, null, ex);\n//            }\n\n            //Set up File Chooser\n            SwingUtilities.updateComponentTreeUI(gameLocator);\n\n            gameLocator.setApproveButtonText(\"Select\");\n            gameLocator.setDragEnabled(false);\n            gameLocator.setDialogType(JFileChooser.OPEN_DIALOG);\n            gameLocator.setMultiSelectionEnabled(false);\n            gameLocator.setAcceptAllFileFilterUsed(true);\n            gameLocator.setEnabled(true);\n            gameLocator.revalidate();\n\n            gameLocator.setPreferredSize(new Dimension(coverPane.getImgIcon().getIconWidth() * 2 + 100, coverPane.getImgIcon().getIconHeight() - 5));\n\n            try {\n                Field field = PopupFactory.class.getDeclaredField(\"forceHeavyWeightPopupKey\");\n                field.setAccessible(true);\n                gameLocator.putClientProperty(field.get(null), true);\n            } catch (Exception e) {\n                e.printStackTrace();\n            }\n\n\n\n            ////BOTTOM PANEL COMPONENTS ////\n            //Major Panel Setup\n            bottomPane.setPreferredSize(new Dimension(bottomPane.getImgIcon().getIconWidth(), bottomPane.getImgIcon().getIconHeight()));\n            ///Set Up Textfield where user will search for game to add\n            gameSearchBar.setFont(coreUI.getDefaultFont().deriveFont(Font.BOLD, 20));\n            gameSearchBar.setForeground(Color.DARK_GRAY);\n            gameSearchBar.setOpaque(false);\n            gameSearchBar.setBorder(null);\n            gameSearchBar.setPreferredSize(new Dimension(500, 50));\n            //Set up image sizes for the Search box\n            bottomTop.setPreferredSize(new Dimension(addGamePane.getImgIcon().getIconWidth(), 20));\n            searchBox.setPreferredSize(new Dimension(searchBox.getImgIcon().getIconWidth(), searchBox.getImgIcon().getIconHeight()));\n            searchBG.setPreferredSize(new Dimension(searchBG.getImgIcon().getIconWidth(), searchBG.getImgIcon().getIconHeight()));\n            searchArrow.setPreferredSize(new Dimension(searchArrow.getImgIcon().getIconWidth(), searchArrow.getImgIcon().getIconHeight()));\n            ///Set Up Title Label for Add Game UI\n            lblAddTitle.setFont(coreUI.getDefaultFont().deriveFont(Font.BOLD, 15));\n            lblAddTitle.setOpaque(false);\n            lblAddTitle.setForeground(Color.black);\n\n            ////ADD GAME UI////\n            //Set up glass panel to make the Add Game UI visible ontop of all the rest of the UI\n            glass.setVisible(true);\n            glass.setLayout(null);\n            glass.setOpaque(false);\n            //Set up the actuall Add Game UI panel\n            addGamePane.setLocation((coreUI.getFrame().getWidth() / 2) - (addGamePane.getImgIcon().getIconWidth() / 2), -380);\n            addGamePane.setSize(new Dimension(addGamePane.getImgIcon().getIconWidth(), addGamePane.getImgIcon().getIconHeight()));\n            addGamePane.revalidate();\n\n            addGameToLibButton.setLocation((coreUI.getFrame().getWidth() / 2) - (335 / 2), addGamePane.getImgIcon().getIconHeight() - 90);\n            addGameToLibButton.setSize(new Dimension(340, 140));\n\n\n            /////////////////\n            //Add To Panels//\n            /////////////////\n\n\n            ////TOP PANEL COMPONENTS ////\n            //Add the Close button to the Top most Panel\n            topPane.add(btnCloseAddUI, BorderLayout.EAST);\n            topPane.add(btnCloseAddUI, BorderLayout.EAST);\n\n\n            ////BOTTOM PANEL COMPONENTS ////\n            //Add components to form the Search Box\n            searchBox.add(gameSearchBar, BorderLayout.CENTER);\n            searchBG.add(searchArrow, BorderLayout.WEST);\n            searchBG.add(searchBox, BorderLayout.EAST);\n            addSearchContainer.add(searchBG);\n            //Add UI elements to the Bottom Panel in the Add Game UI\n            bottomTop.add(lblAddTitle);\n            bottomPane.add(addSearchContainer, BorderLayout.CENTER);\n            bottomPane.add(bottomTop, BorderLayout.PAGE_START);\n\n\n            ////CENTRAL PANEL COMPONENTS ////\n            //Add the Titles and Notificatons at the Top of the CENTRAL panel\n            LeftTopCenter.add(stepOne);\n            LeftTopCenter.add(lblLeftTitle);\n            RightTopCenter.add(stepTwo);\n            RightTopCenter.add(lblRightTitle);\n            //Content Panels\n            coverPane.add(coverGame, BorderLayout.SOUTH);\n            LeftBottomCenter.add(coverPane);\n            LeftBottomCenter.add(gamesList);\n\n            //Add the main Content to the Central Panel\n            ContentPane.add(LeftBottomCenter, BorderLayout.WEST);\n            RightBottomCenter.add(gameLocator);\n            RightBottomContainer.add(RightBottomCenter, BorderLayout.WEST);\n            ContentPane.add(RightBottomContainer, BorderLayout.EAST);\n            TopCenterPane.add(LeftTopCenter, BorderLayout.WEST);\n            TopCenterPane.add(RightTopCenter, BorderLayout.EAST);\n            centerPane.add(TopCenterPane, BorderLayout.NORTH);\n            centerPane.add(ContentPane, BorderLayout.CENTER);\n\n\n            ////ADD GAME UI////\n            //Add the TOP the CENTER and the BOTTOM panels to the Add Game UI\n            addGamePane.add(topPane, BorderLayout.PAGE_START);\n            addGamePane.add(centerPane, BorderLayout.CENTER);\n            addGamePane.add(bottomPane, BorderLayout.PAGE_END);\n            //Finish by adding the Add Game UI to the Glass.\n\n            glass.add(addGamePane);\n            glass.add(addGameToLibButton);\n\n\n\n            ////////////\n            //Handlers//\n            ////////////\n\n\n            btnCloseAddUI.addActionListener(handler.new HideGameAddUIHandler(this));\n\n            addGamePane.addMouseListener(handler.new EmptyMouseHandler()); //so that you dont select behind the Panel\n            gameSearchBar.addFocusListener(handler.new addGameFocusHandler(this));\n            gameSearchBar.addMouseListener(handler.new addGameMouseHandler(this));\n            gameSearchBar.addKeyListener(handler.new addGameSearchBoxHandler(this));\n            gamesList.addListSelectionListener(handler.new SelectListHandler(this));\n            gameLocator.setFileFilter(handler.new ExecutableFilterHandler(coreUI));\n            gameLocator.addActionListener(handler.new ExecutableChooserHandler(this, gameLocator));\n            addGameToLibButton.addActionListener(handler.new AddToLibraryHandler(this));\n\n            ////////////\n            //Finalize//\n            ////////////\n\n\n            addGamePane.setVisible(false);\n            addGameAnimator = new AAnimate(addGamePane);\n            addGameToLibButton.revalidate();\n            addGamePane.revalidate();\n\n            glass.revalidate();\n\n            isAddGameUILoaded = true;\n        }\n    }\n\n    public void checkNotifiers() {\n\n        if (stepOne.getImgURl().equals(\"AddGame_step1_green.png\") && stepTwo.getImgURl().equals(\"AddGame_step2_green.png\")) {\n            //Animate the Button bellow Add Game UI\n            addGameToLibButton.setVisible(true);\n            addGameToLibButtonAnimator.setInitialLocation((coreUI.getFrame().getWidth() / 2) - (335 / 2), addGamePane.getImgIcon().getIconHeight() - 180);\n            addGameToLibButtonAnimator.moveVertical(addGamePane.getImgIcon().getIconHeight() - 55, 20);\n            addGameToLibButtonAnimator.removeAllListeners();\n        }\n\n        if ((stepOne.getImgURl().equals(\"AddGame_step1_red.png\") || stepTwo.getImgURl().equals(\"AddGame_step2_red.png\")) && addGameToLibButton.isVisible()) {\n\n\n            addGameToLibButtonAnimator.moveVertical(0, 16);\n            addGameToLibButtonAnimator.addPostAnimationListener(new APostHandler() {\n                @Override\n                public void actionPerformed() {\n                    addGameToLibButton.setVisible(false);\n                }\n            });\n        }\n\n    }\n\n    public void showAddGameUI() {\n        addGameUI_Visible = true;\n        //prep Add Game UI\n        setAddGameUI();\n\n\n        //Animate\n        addGameAnimator.setInitialLocation((coreUI.getFrame().getWidth() / 2) - (addGamePane.getImgIcon().getIconWidth() / 2), -390);\n        addGameAnimator.moveVertical(0, 32); //even only\n        addGamePane.revalidate();\n\n        gameSearchBar.setFocusable(true);\n\n        addGameAnimator.addPostAnimationListener(new APostHandler() {\n            @Override\n            public void actionPerformed() {\n                gameSearchBar.requestFocus();\n            }\n        });\n\n    }\n\n    public void hideAddGameUI() {\n        addGameUI_Visible = false;\n        addGameToLibButton.setVisible(false);\n        //Animate\n        addGameAnimator.moveVertical(-470, 32);\n\n        //restore\n        //GameSearch.resetCover();\n        stepTwo.setImgURl(\"AddGame_step2_red.png\");\n        addGameAnimator.removeAllListeners();\n        addGameToLibButton.setVisible(false);\n        addGameToLibButton.repaint();\n        gridSearchBar.requestFocus();\n        coreUI.getFrame().requestFocus();\n        gridSearchBar.requestFocus();\n        coreUI.getFrame().requestFocus();\n\n    }\n\n    public void moveGridLeft() {\n        System.out.println(\"Left key pressed\");\n        if (!GridAnimate.getAnimator1().isAnimating() && !GridAnimate.getAnimator2().isAnimating()) {\n\n            ///Get The Index of The Current Panel Being Displayed///\n            ///Refer too GridManager array of All panels to find it///\n            currentIndex = GridSplit.getArray().indexOf(GameBack.getComponent(1));\n\n            //Stop from going to far left\n            if (currentIndex - 1 == -1) {\n                currentIndex = 1;\n                imgGameLeft.mouseExit();\n            }\n\n\n            if (currentIndex < GridSplit.getArray().size()) {\n\n                GridSplit.decrementVisibleGridIndex();\n                //Clear Panel\n                if (currentIndex - 1 <= 0) {\n                    //Far Left Image\n                    GameBack.remove(0);\n                    GameBack.add(imgFavorite, BorderLayout.WEST, 0);\n\n                } else {\n                    //Left Button\n                    GameBack.remove(0);\n                    GameBack.add(imgGameLeft, BorderLayout.WEST, 0);\n                }\n                //Add GameCover Covers\n\n                GridAnimate.moveLeft(currentIndex);\n\n                GameBack.add(BorderLayout.EAST, imgGameRight);\n\n                try {\n                    load(currentIndex - 1);\n                } catch (MalformedURLException ex) {\n                    Logger.getLogger(GameLibraryUI.class.getName()).log(Level.SEVERE, null, ex);\n                }\n            }\n\n            coreUI.getCenterPanel().removeAll();\n            coreUI.getCenterPanel().add(BorderLayout.CENTER, GameBack);\n\n            GameBack.repaint();\n            GameBack.revalidate();\n\n            coreUI.getFrame().requestFocus();\n\n        }\n        imgGameLeft.mouseExit();\n    }\n\n    public void moveGridRight() {\n        System.out.println(\"Right key pressed\");\n\n        if (!GridAnimate.getAnimator1().isAnimating() && !GridAnimate.getAnimator2().isAnimating()) {\n\n            currentIndex = GridSplit.getArray().indexOf(GameBack.getComponent(1));\n\n\n            if (currentIndex < GridSplit.getArray().size() - 1) {\n\n                GridSplit.incrementVisibleGridIndex();\n\n                GameBack.remove(0);\n                GameBack.add(imgGameLeft, BorderLayout.WEST, 0);\n\n\n                GameBack.add(imgGameRight, BorderLayout.EAST, 2);\n\n                GridAnimate.moveRight(currentIndex);\n\n\n                try {\n                    load(currentIndex + 1);\n                } catch (MalformedURLException ex) {\n                    Logger.getLogger(GameLibraryUI.class.getName()).log(Level.SEVERE, null, ex);\n                }\n\n\n\n                //of on last Grid then dont show right arrow button\n                if (!(currentIndex + 1 < GridSplit.getArray().size() - 1)) {\n\n                    GameBack.remove(imgGameRight);\n                    GameBack.add(imgBlank, BorderLayout.EAST, 2);\n                    imgGameRight.mouseExit();\n                }\n            }\n\n            coreUI.getCenterPanel().removeAll();\n            coreUI.getCenterPanel().add(BorderLayout.CENTER, GameBack);\n\n            GameBack.repaint();\n            GameBack.revalidate();\n\n            coreUI.getFrame().requestFocus();\n\n        }\n        imgGameRight.mouseExit();\n    }\n\n    //GETTER AND SETTERS\n    public AAnimate getAddGameAnimator() {\n        return addGameAnimator;\n    }\n\n     public JLabel getLblGameName() {\n        return lblGameName;\n    }\n\n    public HoverButtonLeft getMoveLibraryLeftHandler() {\n        return MoveLibraryLeftHandler;\n    }\n\n    public HoverButtonRight getMoveLibraryRightHandler() {\n        return MoveLibraryRightHandler;\n    }\n\n    public AButton getAddGameToLibButton() {\n        return addGameToLibButton;\n    }\n\n    public AAnimate getAddGameToLibButtonAnimator() {\n        return addGameToLibButtonAnimator;\n    }\n\n    public JPanel getAddSearchContainer() {\n        return addSearchContainer;\n    }\n\n    public JPanel getBottomCenterPane() {\n        return BottomCenterPane;\n    }\n\n    public JFileChooser getGameLocator() {\n        return gameLocator;\n    }\n\n    public GameLibraryHandler getHandler() {\n        return handler;\n    }\n\n    public AButton getRemoveSearchButton() {\n        return removeSearchButton;\n    }\n\n    public JTextField getGameSearchBar() {\n        return gameSearchBar;\n    }\n\n    public ASimpleDB getCoverDB() {\n        return CoverDB;\n    }\n\n    public DefaultListModel getListModel() {\n        return listModel;\n    }\n\n    public JList getGamesList() {\n        return gamesList;\n    }\n\n    public MoveToLastGrid getGridMove() {\n        return GridMove;\n    }\n\n    public JScrollPane getListScrollPane() {\n        return gameScrollPane;\n    }\n\n    public AImage getStepOne() {\n        return stepOne;\n    }\n\n    public AImage getStepTwo() {\n        return stepTwo;\n    }\n\n    public AImagePane getAddGamePane() {\n        return addGamePane;\n    }\n\n    public AddGameHandler getAddGameHandler() {\n        return addGameHandler;\n    }\n\n    public AImagePane getCoverPane() {\n        return coverPane;\n    }\n\n    public void setCoverGame(AImagePane coverGame) {\n        this.coverGame = coverGame;\n    }\n\n    public AImagePane getCoverGame() {\n        return coverGame;\n    }\n\n    public AImagePane getBottomPane() {\n        return bottomPane;\n    }\n\n    public JLabel getLblAddUITitle() {\n        return lblAddTitle;\n    }\n\n    public AImagePane getSearchArrow() {\n        return searchArrow;\n    }\n\n    public AImagePane getSearchBG() {\n        return searchBG;\n    }\n\n    public AImagePane getSearchBox() {\n        return searchBox;\n    }\n\n    public JTextField getSearchText() {\n        return gameSearchBar;\n    }\n\n    public GameSearch getGameSearch() {\n        return GameSearch;\n    }\n\n    public JPanel getButtonPane() {\n        return ButtonPane;\n    }\n\n    public JPanel getGameBack() {\n        return GameBack;\n    }\n\n    public GridAnimation getGridAnimate() {\n        return GridAnimate;\n    }\n\n    public GridManager getGridSplit() {\n        return GridSplit;\n    }\n\n    public int getSIZE_AddGameHeight() {\n        return SIZE_AddGameHeight;\n    }\n\n    public int getSIZE_AddGameWidth() {\n        return SIZE_AddGameWidth;\n    }\n\n    public int getSIZE_FramePanePadding() {\n        return SIZE_FramePanePadding;\n    }\n\n    public int getSIZE_GameCoverHeight() {\n        return SIZE_GameCoverHeight;\n    }\n\n    public int getSIZE_GameCoverWidth() {\n        return SIZE_GameCoverWidth;\n    }\n\n    public int getSIZE_GameNameFont() {\n        return SIZE_GameNameFont;\n    }\n\n    public int getSIZE_SelectedGameBarHeight() {\n        return SIZE_SelectedGameBarHeight;\n    }\n\n    public int getSIZE_SelectedGameBarWidth() {\n        return SIZE_SelectedGameBarWidth;\n    }\n\n    public int getSIZE_ZoomButtonHeight() {\n        return SIZE_ZoomButtonHeight;\n    }\n\n    public GridSearch getSearch() {\n        return Search;\n    }\n\n    public JTextField getSearchBar() {\n        return gridSearchBar;\n    }\n\n    public AImagePane getSearchBarBG() {\n        return SearchBarBG;\n    }\n\n    public AButton getSearchButton() {\n        return SearchButton;\n    }\n\n    public AImagePane getSearchButtonBG() {\n        return SearchButtonBG;\n    }\n\n    public JPanel getSearchContainer() {\n        return SearchContainer;\n    }\n\n    public JPanel getSearchPane() {\n        return SearchPane;\n    }\n\n    public JPanel getSelectedGameContainer() {\n        return SelectedGameContainer;\n    }\n\n    public AuroraStorage getStorage() {\n        return storage;\n    }\n\n    public JPanel getTextPane() {\n        return TextPane;\n    }\n\n    public AButton getZoomM() {\n        return ZoomM;\n    }\n\n    public AButton getZoomP() {\n        return ZoomP;\n    }\n\n    public ActionListener getA() {\n        return a;\n    }\n\n    public AButton getBtnAddGame() {\n        return btnAddGame;\n    }\n\n    public int getCurrentIndex() {\n        return currentIndex;\n    }\n\n    public void setCurrentIndex(int index) {\n        currentIndex = index;\n    }\n\n    public int getCurrentPanel() {\n        return currentPanel;\n    }\n\n    public String getCurrentPath() {\n        return currentPath;\n    }\n\n    public void setCurrentPath(String path) {\n        currentPath = path;\n    }\n\n    public ArrayList<AImagePane> getGameCover() {\n        return gameCover;\n    }\n\n    public AImage getImgFavorite() {\n        return imgFavorite;\n    }\n\n    public AImage getImgBlank() {\n        return imgBlank;\n    }\n\n    public AHoverButton getImgGameLeft() {\n        return imgGameLeft;\n    }\n\n    public AHoverButton getImgGameRight() {\n        return imgGameRight;\n    }\n\n    public AImage getImgKeyIco() {\n        return imgKeyIco;\n    }\n\n    public AImagePane getImgSelectedGamePane() {\n        return imgSelectedGamePane;\n    }\n\n    public JLabel getLblKeyAction() {\n        return lblKeyAction;\n    }\n\n    public ArrayList<Boolean> getLoadedPanels() {\n        return loadedPanels;\n    }\n\n    public DashboardUI getObj() {\n        return dashboardUI;\n    }\n\n    public boolean isAddGameUI_Visible() {\n        return addGameUI_Visible;\n    }\n\n    public int getZoom() {\n        return zoom;\n    }\n\n    public AuroraCoreUI getCoreUI() {\n        return coreUI;\n    }\n\n    public DashboardUI getDashUI() {\n        return dashboardUI;\n    }\n\n\n}\n"]],"start1":0,"start2":0,"length1":0,"length2":49384}]],"length":49384}
{"contributors":[],"silentsave":false,"ts":1353688591715,"patch":[[{"diffs":[[0,"ler."],[-1,"AddGameHandler;\nimport aurora.V1.core.screen_handler.GameLibraryHandler."],[0,""],[1,""],[0,"Game"]],"start1":875,"start2":875,"length1":80,"length2":8},{"diffs":[[0,"stGrid;\n"],[1,"import aurora.V1.core.screen_handler.GameLibraryHandler.ShowAddGameUiHandler;\n"],[0,"import a"]],"start1":1114,"start2":1114,"length1":16,"length2":94},{"diffs":[[0,"een_"],[-1,"ui.DashboardUI"],[1,"logic.GameLibraryLogic"],[0,";\nim"]],"start1":1375,"start2":1375,"length1":22,"length2":30},{"diffs":[[0,"ava.awt."],[-1,"*"],[1,"BorderLayout"],[0,";\nimport"]],"start1":1474,"start2":1474,"length1":17,"length2":28},{"diffs":[[0,"awt."],[-1,"event.ActionListener"],[1,"Color;\nimport java.awt.Dimension;\nimport java.awt.FlowLayout;\nimport java.awt.Font"],[0,";\nim"]],"start1":1508,"start2":1508,"length1":28,"length2":90},{"diffs":[[0,"ing."],[-1,"*;\n\n/**\n *\n * @author Sammy, Carlos\n * @version 0.5\n */\npublic class GameLibraryUI extends AuroraApp {\n\n    private AButton ZoomP;\n    private AButton ZoomM;\n    private ArrayList<AImagePane> gameCover;\n    private int zoom;\n    private JPanel GameBack;\n    private AImage imgFavorite;\n    private AHoverButton imgGameRight;\n    private GridManager GridSplit;\n    private AHoverButton imgGameLeft;\n    private int currentIndex;\n    private ActionListener a;\n    private int currentPanel;\n    private ArrayList<Boolean> loadedPanels;\n    public static int SIZE_GameCoverHeight;\n    public static int SIZE_GameCoverWidth;\n    public static int SIZE_ZoomButtonHeight;\n    public static int SIZE_SelectedGameBarHeight;\n    public static int SIZE_SelectedGameBarWidth;\n    public static int SIZE_AddGameWidth;\n    public static int SIZE_AddGameHeight;\n    public static int SIZE_GameNameFont;\n    private GridAnimation GridAnimate;\n    private AImagePane imgSelectedGamePane;\n    public static JLabel lblGameName;\n    private AImage imgKeyIco;\n    private JLabel lblKeyAction;\n    private AButton btnAddGame;\n    private JPanel SelectedGameContainer;\n    private AImagePane SearchBarBG;\n    private JTextField gridSearchBar;\n    private JPanel SearchPane;\n    private JPanel TextPane;\n    private AImagePane SearchButtonBG;\n    private AButton SearchButton;\n    private JPanel SearchContainer;\n    private JPanel ButtonPane;\n    private int SIZE_FramePanePadding;\n    private GameLibraryHandler handler;\n    private GridSearch Search;\n    private AImage imgBlank;\n    private ASimpleDB CoverDB;\n    private AddGameHandler addGameHandler;\n    private AImagePane addGamePane;\n    private AAnimate addGameAnimator;\n    private AButton btnCloseAddUI;\n    private JPanel topPane;\n    private AImagePane searchBG;\n    private AImagePane searchArrow;\n    private AImagePane searchBox;\n    private AImagePane bottomPane;\n    private JPanel centerPane;\n    private JLabel lblAddTitle;\n    private JTextField gameSearchBar;\n    private JPanel addSearchContainer;\n    private JPanel bottomTop;\n    private JPanel TopCenterPane;\n    private JPanel LeftTopCenter;\n    private JPanel RightTopCenter;\n    private AImage stepOne;\n    private AImage stepTwo;\n    private JLabel lblLeftTitle;\n    private JLabel lblRightTitle;\n    private AImagePane coverPane;\n    private AImagePane coverGame;\n    private JPanel BottomCenterPane;\n    private JPanel LeftBottomCenter;\n    private JPanel RightBottomCenter;\n    private JPanel ContentPane;\n    private GameSearch GameSearch;\n    private searchBoxHandler searchBoxHandler;\n    private searchFocusHandler searchFocusHandler;\n    private boolean addGameUI_Visible = false;\n    private JList gamesList;\n    private JScrollPane gameScrollPane;\n    private JFileChooser gameLocator;\n    private DefaultListModel listModel;\n    private JPanel RightBottomContainer;\n    private String currentPath;\n    private AButton addGameToLibButton;\n    private AAnimate addGameToLibButtonAnimator;\n    private AuroraStorage storage;\n    private HoverButtonLeft MoveLibraryLeftHandler;\n    private HoverButtonRight MoveLibraryRightHandler;\n    private MoveToLastGrid GridMove;\n    private boolean isAddGameUILoaded = false;\n    private boolean isGameLibraryKeyListenerAdded;\n    private int SIZE_SearchBarWidth;\n    private AButton removeSearchButton;\n    private final DashboardUI dashboardUI;\n    private final AuroraCoreUI coreUI;\n\n    public GameLibraryUI(AuroraStorage storage\n            ,final DashboardUI dashboardUi\n            ,final AuroraCoreUI auroraCoreUI) {\n        this.coreUI = auroraCoreUI;\n        this.storage = storage;\n        this.dashboardUI = dashboardUi;\n        this.handler = new GameLibraryHandler();\n        this.clearUI_Forwards();\n        isGameLibraryKeyListenerAdded = false;\n\n    }\n\n    public void setSize() {\n\n        int Ratio = (coreUI.getFrame().getWidth() - coreUI.getFrame().getHeight()) / 2;\n        System.out.println(\"Ratio \" + Ratio);\n        System.out.println(\"Height \" + coreUI.getFrame().getHeight());\n        System.out.println(\"Width \" + coreUI.getFrame().getWidth());\n        if (coreUI.isLargeScreen()) {\n            SIZE_GameCoverHeight = coreUI.getFrame().getHeight() / 3 - (Ratio / 10) + 5;\n            SIZE_GameCoverWidth = coreUI.getFrame().getWidth() / 5 - (Ratio / 10) - 5;\n            SIZE_ZoomButtonHeight = 30;\n            SIZE_SelectedGameBarHeight = 65;\n            SIZE_SelectedGameBarWidth = 380;\n            SIZE_AddGameWidth = 351;\n            SIZE_AddGameHeight = 51;\n            SIZE_GameNameFont = 35;\n            SIZE_FramePanePadding = 20;\n            SIZE_SearchBarWidth = 880;\n\n        } else {\n            SIZE_FramePanePadding = 10;\n            SIZE_GameCoverHeight = coreUI.getFrame().getHeight() / 3 - (Ratio / 10);\n            SIZE_GameCoverWidth = coreUI.getFrame().getWidth() / 5 - (Ratio / 10);\n            SIZE_ZoomButtonHeight = 25;\n            SIZE_AddGameWidth = 300;\n            SIZE_AddGameHeight = 40;\n            SIZE_SelectedGameBarHeight = 60;\n            SIZE_SelectedGameBarWidth = 360;\n            SIZE_GameNameFont = 32;\n            SIZE_SearchBarWidth = coreUI.getFrame().getWidth() / 2 + coreUI.getControlWidth() / 2;\n        }\n\n\n    }\n\n    @Override\n    public final void loadUI() {\n\n        ///...SET UP\n        setSize();\n\n\n        ///... setup\n        coreUI.getInfoLabel().setText(\"   Loading...   \");\n        coreUI.getCenterPanel().repaint();\n\n        ///...Create Components\n\n        ///Panel Containing Arrow Buttons and GameCover Panel\n        GameBack = new JPanel(true);\n        GameBack.setOpaque(false);\n        GameBack.setLayout(new BorderLayout(5, 5)); //Inital Size = 10 Games\n\n\n\n        imgFavorite = new AImage(\"Aurora_Favorite.png\");\n        imgBlank = new AImage(\"Aurora_Blank.png\");\n\n\n        MoveLibraryLeftHandler = handler.new HoverButtonLeft(this, coreUI);\n        MoveLibraryRightHandler = handler.new HoverButtonRight(this, coreUI);\n\n        imgGameRight = new AHoverButton(MoveLibraryRightHandler, 3, \"Aurora_RightLib_normal.png\", \"Aurora_RightLib_over.png\");\n        imgGameLeft = new AHoverButton(MoveLibraryLeftHandler, 3, \"Aurora_LeftLib_normal.png\", \"Aurora_LeftLib_over.png\");\n        GridMove = handler.new MoveToLastGrid(this);\n\n        //...Zoom Buttons\n        ZoomP = new AButton(\"Aurora_ZoomP_normal.png\", \"Aurora_ZoomP_down.png\", \"Aurora_ZoomP_over.png\", 0, SIZE_ZoomButtonHeight);\n        ZoomM = new AButton(\"Aurora_ZoomM_normal.png\", \"Aurora_ZoomM_down.png\", \"Aurora_ZoomM_over.png\", 0, SIZE_ZoomButtonHeight);\n\n        //Add Zoom Buttons\n        coreUI.getInfoPanel().removeAll();\n\n        coreUI.getInfoPanel().add(ZoomM);\n        coreUI.getInfoPanel().add(coreUI.getInfoLabel());\n        coreUI.getInfoPanel().add(ZoomP);\n\n\n        //Key Actions Panel\n\n        imgKeyIco = new AImage(\"KeyboardKeys/arrows.png\", coreUI.getKeyIconWidth(), coreUI.getKeyIconHeight());\n        lblKeyAction = new JLabel(\" Move \");\n        lblKeyAction.setFont(coreUI.getDefaultFont().deriveFont(Font.PLAIN, coreUI.getKeysFontSize()));\n        lblKeyAction.setForeground(Color.YELLOW);\n        coreUI.getKeyToPressPanel().add(coreUI.getKeyIconImage());\n        coreUI.getKeyToPressPanel().add(coreUI.getKeyActionLabel());\n        coreUI.getKeyToPressPanel().add(imgKeyIco);\n        coreUI.getKeyToPressPanel().add(lblKeyAction);\n        coreUI.getHeaderOfCenterFromBottomPanel().setPreferredSize(new Dimension(coreUI.getFrame().getWidth(), 5));\n        coreUI.getHeaderOfCenterFromBottomPanel().revalidate();\n\n        ///Selected GameCover Bar\n\n        SelectedGameContainer = new JPanel();\n        SelectedGameContainer.setOpaque(false);\n\n        imgSelectedGamePane = new AImagePane(\"Aurora_SelectedGameBar.png\", SIZE_SelectedGameBarWidth, SIZE_SelectedGameBarHeight,\n                new FlowLayout(FlowLayout.CENTER, 0, 5));\n\n        imgSelectedGamePane.setPreferredSize(new Dimension(SIZE_SelectedGameBarWidth, SIZE_SelectedGameBarHeight));\n        //imgSelectedGamePane.setOpaque(true);\n\n\n        lblGameName = new JLabel(\"Select A Game For Info\");\n        lblGameName.setOpaque(false);\n        lblGameName.setFont(coreUI.getDefaultFont().deriveFont(Font.PLAIN, SIZE_GameNameFont));\n        lblGameName.setForeground(Color.LIGHT_GRAY);\n\n        //Add game Name Lable\n        imgSelectedGamePane.add(lblGameName);\n        SelectedGameContainer.add(imgSelectedGamePane);\n\n\n        ////Add Game Button\n        //TODO needs a container\n        JPanel container = new JPanel(new BorderLayout());\n        container.setOpaque(false);\n        addGameHandler = handler.new AddGameHandler(this);\n\n        btnAddGame = new AButton(\"Aurora_Add_normal.png\", \"Aurora_Add_down.png\", \"Aurora_Add_over.png\", SIZE_AddGameWidth, SIZE_AddGameHeight);\n        btnAddGame.addActionListener(addGameHandler);\n\n\n        container.add(btnAddGame, BorderLayout.CENTER);\n\n\n        coreUI.getUserSpacePanel().setLayout(new BorderLayout());\n        coreUI.getUserSpacePanel().setVisible(true);\n        coreUI.getUserSpacePanel().add(container);\n\n\n        //Center Bottom\n\n        coreUI.getCenterFromBottomPanel().setLayout(new BorderLayout());\n        coreUI.getCenterFromBottomPanel().add(BorderLayout.CENTER, SelectedGameContainer);\n        coreUI.getCenterFromBottomPanel().add(BorderLayout.SOUTH, coreUI.getUserSpacePanel());\n\n        //Search Bar\n\n\n        SearchBarBG = new AImagePane(\"SearchBar_inactive.png\", new BorderLayout());\n        SearchBarBG.setPreferredSize(new Dimension(SIZE_SearchBarWidth, 50));\n\n        removeSearchButton = new AButton(\"SearchButtonBack_up.png\", \"SearchButtonBack_down.png\", \"SearchButtonBack_over.png\");\n        removeSearchButton.setPreferredSize(new Dimension(70, 51));\n\n        gridSearchBar = new JTextField(\"Start Typing To Search...\");\n        gridSearchBar.setOpaque(false);\n        gridSearchBar.setBorder(null);\n        gridSearchBar.setColumns(19);\n        gridSearchBar.setForeground(Color.darkGray);\n        gridSearchBar.setFont(coreUI.getDefaultFont().deriveFont(Font.BOLD, 40));\n        gridSearchBar.setPreferredSize(new Dimension(880, 50));\n\n\n\n        SearchButton = new AButton(\"SearchButton_up.png\", \"SearchButton_down.png\", \"SearchButton_over.png\");\n        SearchButton.setPreferredSize(new Dimension(70, 51));\n        SearchButton.addActionListener(handler.new searchButtonHandler(this));\n\n        SearchButtonBG = new AImagePane(\"SearchButtonBG.png\", new BorderLayout());\n        SearchButtonBG.setPreferredSize(new Dimension(70, 51));\n        SearchButtonBG.add(SearchButton, BorderLayout.NORTH);\n\n\n        TextPane = new JPanel(new BorderLayout());\n        TextPane.setOpaque(false);\n        TextPane.add(gridSearchBar, BorderLayout.NORTH);\n\n        ///     +\n\n        ButtonPane = new JPanel(new BorderLayout());\n        ButtonPane.setOpaque(false);\n        ButtonPane.add(SearchButtonBG, BorderLayout.NORTH);\n\n\n        ///   =\n\n        SearchContainer = new JPanel(new BorderLayout());\n        SearchContainer.setOpaque(false);\n        SearchContainer.add(ButtonPane, BorderLayout.WEST);\n        SearchContainer.add(TextPane, BorderLayout.CENTER);\n\n\n        SearchBarBG.add(SearchContainer, BorderLayout.WEST);\n        SearchBarBG.validate();\n\n        SearchPane = new JPanel(new BorderLayout());\n        SearchPane.setOpaque(false);\n        SearchPane.add(SearchBarBG, BorderLayout.EAST);\n        SearchPane.setPreferredSize(new Dimension(SearchPane.getBounds().width, 75));\n        SearchPane.validate();\n\n\n        coreUI.getSouthFromTopPanel().add(BorderLayout.CENTER, SearchPane);\n        coreUI.getSouthFromTopPanel().setPreferredSize(\n                new Dimension(coreUI.getSouthFromTopPanel().getWidth(), coreUI.getFrameControlImagePane().getHeight()));\n\n        ///Search Bar Auto Focus//\n        ////Search Backend////\n\n        Search = new GridSearch(coreUI, this, GridSplit);\n\n        //Handle Search Queries\n        searchBoxHandler = handler.new searchBoxHandler(this);\n        searchFocusHandler = handler.new searchFocusHandler(this);\n        gridSearchBar.addKeyListener(searchBoxHandler);\n        gridSearchBar.addFocusListener(searchFocusHandler);\n        gridSearchBar.addMouseListener(handler.new searchSelectHandler(this));\n\n        //TODO PUT IN SEPERATE METHOD\n\n        coreUI.getFrame().addKeyListener(handler.new searchRefocusListener(this));\n        coreUI.getFrame().addKeyListener(handler.new GameLibraryKeyListener(this, coreUI));\n        coreUI.getFrame().addMouseWheelListener(handler.new GridMouseWheelListener(this));\n\n        coreUI.getBackgroundImagePane().addKeyListener(handler.new searchRefocusListener(this));\n        coreUI.getBackgroundImagePane().addKeyListener(handler.new GameLibraryKeyListener(this, coreUI));\n        coreUI.getBackgroundImagePane().addMouseWheelListener(handler.new GridMouseWheelListener(this));\n\n        coreUI.getBottomImagePane().addKeyListener(handler.new searchRefocusListener(this));\n        coreUI.getBottomImagePane().addKeyListener(handler.new GameLibraryKeyListener(this, coreUI));\n        coreUI.getBottomImagePane().addMouseWheelListener(handler.new GridMouseWheelListener(this));\n\n        coreUI.getCenterPanel().addKeyListener(handler.new searchRefocusListener(this));\n        coreUI.getCenterPanel().addKeyListener(handler.new GameLibraryKeyListener(this, coreUI));\n        coreUI.getCenterPanel().addMouseWheelListener(handler.new GridMouseWheelListener(this));\n\n        coreUI.getSouthFromTopPanel().addKeyListener(handler.new searchRefocusListener(this));\n        coreUI.getSouthFromTopPanel().addKeyListener(handler.new GameLibraryKeyListener(this, coreUI));\n        coreUI.getSouthFromTopPanel().addMouseWheelListener(handler.new GridMouseWheelListener(this));\n\n        coreUI.getFrameControlImagePane().addKeyListener(handler.new searchRefocusListener(this));\n        coreUI.getFrameControlImagePane().addKeyListener(handler.new GameLibraryKeyListener(this, coreUI));\n        coreUI.getFrameControlImagePane().addMouseWheelListener(handler.new GridMouseWheelListener(this));\n\n        coreUI.getTopImagePane().addKeyListener(handler.new searchRefocusListener(this));\n        coreUI.getTopImagePane().addKeyListener(handler.new GameLibraryKeyListener(this, coreUI));\n        coreUI.getTopImagePane().addMouseWheelListener(handler.new GridMouseWheelListener(this));\n\n        this.btnAddGame.addKeyListener(handler.new searchRefocusListener(this));\n        this.btnAddGame.addKeyListener(handler.new GameLibraryKeyListener(this, coreUI));\n\n        this.GameBack.addKeyListener(handler.new searchRefocusListener(this));\n        this.GameBack.addKeyListener(handler.new GameLibraryKeyListener(this, coreUI));\n\n        this.imgSelectedGamePane.addKeyListener(handler.new searchRefocusListener(this));\n        this.imgSelectedGamePane.addKeyListener(handler.new GameLibraryKeyListener(this, coreUI));\n\n        this.imgGameLeft.addKeyListener(handler.new searchRefocusListener(this));\n        this.imgGameLeft.addKeyListener(handler.new GameLibraryKeyListener(this, coreUI));\n\n        this.imgGameRight.addKeyListener(handler.new searchRefocusListener(this));\n        this.imgGameRight.addKeyListener(handler.new GameLibraryKeyListener(this, coreUI));\n\n\n        //Add to Volatile Listeners Array List\n\n        addToVolatileListenerBank(gridSearchBar);\n        addToVolatileListenerBank(coreUI.getBackgroundImagePane());\n        addToVolatileListenerBank(coreUI.getBottomImagePane());\n        addToVolatileListenerBank(coreUI.getCenterPanel());\n        addToVolatileListenerBank(coreUI.getSouthFromTopPanel());\n        addToVolatileListenerBank(coreUI.getFrameControlImagePane());\n        addToVolatileListenerBank(coreUI.getTopImagePane());\n        addToVolatileListenerBank(this.btnAddGame);\n        addToVolatileListenerBank(this.GameBack);\n        addToVolatileListenerBank(this.imgSelectedGamePane);\n        addToVolatileListenerBank(this.imgGameLeft);\n        addToVolatileListenerBank(this.imgGameRight);\n\n\n        coreUI.getFrame().requestFocus();\n\n\n        /////---ADD TO UI END\n\n\n        //Start Aurora Dabatase connection\n        try {\n            CoverDB = new ASimpleDB(\"AuroraDB\", \"AuroraTable\", false);\n        } catch (SQLException ex) {\n            Logger.getLogger(GameLibraryUI.class.getName()).log(Level.SEVERE, null, ex);\n        }\n\n        GridSplit = new GridManager(2, 4, coreUI);\n\n        GridSplit.initiateGrid(0);\n\n        //Grid Animator\n        this.GridAnimate = new GridAnimation(GridSplit, GameBack);\n\n        int width = SIZE_GameCoverWidth;\n        int height = SIZE_GameCoverHeight;\n\n\n\n\n        ////////////////////////\n        //ADD GAMES TO LIBRARY//\n        ////////////////////////\n\n\n        try {\n\n            //ADD FAVOURITE GAMES FIRST\n\n            for (int i = 0; i < storage.getStoredLibrary().getGameNames().size(); i++) {\n\n\n\n                Game Game = new Game(GridSplit, coreUI, dashboardUI, storage);\n                if (storage.getStoredLibrary().getFaveStates().get(i)) {\n                    Game.setGameName(storage.getStoredLibrary().getGameNames().get(i));\n                    Game.setCoverUrl(storage.getStoredLibrary().getBoxArtPath().get(i));\n                    //Handle appostrophese in game path\n                    Game.setGamePath(storage.getStoredLibrary().getGamePath().get(i).replace(\"'\", \"''\"));\n                    Game.setFavorite(storage.getStoredLibrary().getFaveStates().get(i));\n                    Game.setCoverSize(SIZE_GameCoverWidth, SIZE_GameCoverHeight);\n\n                    GridSplit.addGame(Game);\n                }\n            }\n\n            //ADD NON-FAVOURITE GAMES LAST\n\n            for (int i = 0; i < storage.getStoredLibrary().getGameNames().size(); i++) {\n\n                Game Game = new Game(GridSplit, coreUI, dashboardUI, storage);\n                if (!storage.getStoredLibrary().getFaveStates().get(i)) {\n                    Game.setGameName(storage.getStoredLibrary().getGameNames().get(i));\n                    Game.setCoverUrl(storage.getStoredLibrary().getBoxArtPath().get(i));\n                    //Handle appostrophese in game path\n                    Game.setGamePath(storage.getStoredLibrary().getGamePath().get(i).replace(\"'\", \"''\"));\n                    Game.setFavorite(storage.getStoredLibrary().getFaveStates().get(i));\n                    Game.setCoverSize(SIZE_GameCoverWidth, SIZE_GameCoverHeight);\n\n                    GridSplit.addGame(Game);\n                }\n            }\n\n            GridSplit.finalizeGrid(addGameHandler, width, height);\n\n            //Load First Grid by default\n            load(0);\n        } catch (MalformedURLException ex) {\n            System.out.println(\"MalformedURLExeption \\n\" + ex);\n        }\n\n\n\n\n        ///...Add To UI\n\n        GameBack.add(BorderLayout.WEST, imgFavorite);\n        GameBack.add(BorderLayout.CENTER, GridSplit.getGrid(0));\n        GameBack.add(BorderLayout.EAST, imgGameRight);\n\n\n\n        //add Grid\n        coreUI.getCenterPanel().add(BorderLayout.CENTER, GameBack);\n        coreUI.getCenterPanel().repaint();\n\n        //Finalize\n        coreUI.getInfoLabel().setText(\"   Game Library   \");\n\n    }\n\n\n\n    /**\n     * SmartLoad GameCover Covers to minimize memory usage through burst loading\n     *\n     */\n    public void load(int currentIndex) throws MalformedURLException {\n\n        System.out.println(\"LAUNCHING LOAD METHOD\");\n        currentPanel = (currentIndex);\n        if (currentPanel < 0) {\n            currentPanel = 0;\n        }\n        System.out.println(\"current panel: \" + currentPanel);\n\n\n\n        //Load First Panels\n\n        isGameLibraryKeyListenerAdded = false;\n        for (int i = 0; i < GridSplit.getGrid(currentPanel).getArray().size(); i++) {\n            Game game = new Game(GridSplit, coreUI, dashboardUI);\n            try {\n                game = (Game) GridSplit.getGrid(currentPanel).getArray().get(i);\n                game.addKeyListener(handler.new searchRefocusListener(this));\n\n                for (int j = 0; j < game.getKeyListeners().length; j++) {\n                    //  if (game.getKeyListeners()[j] instanceof GameLibraryUI.GameLibraryKeyListener) {\n                    if (game.getKeyListeners()[j] instanceof GameLibraryKeyListener) {\n                        isGameLibraryKeyListenerAdded = true;\n                        break;\n                    }\n                }\n\n                if (!isGameLibraryKeyListenerAdded) {\n                    System.out.println(\"ADDING GAMELIBRARYLISTENER TO \" + game.getName());\n                    //  game.addKeyListener(new GameLibraryUI.GameLibraryKeyListener());\n                    game.addKeyListener(handler.new GameLibraryKeyListener(this, coreUI));\n                }\n\n\n                if (!game.isLoaded()) {\n                    game.update();\n\n                    System.out.println(\"loading: \" + game.getGameName());\n                }\n            } catch (RuntimeException ex) {\n            }\n        }\n\n\n        isGameLibraryKeyListenerAdded = false;\n        //Load Second Panel if exists -- SMART LOAD\n        if (currentPanel < GridSplit.getArray().size() - 1) {\n            for (int i = 0; i < GridSplit.getGrid(currentPanel + 1).getArray().size(); i++) {\n                Game game = new Game(GridSplit, coreUI, dashboardUI);\n                try {\n                    game = (Game) GridSplit.getGrid(currentPanel + 1).getArray().get(i);\n\n                    for (int j = 0; j < game.getKeyListeners().length; j++) {\n                        //   if (game.getKeyListeners()[j] instanceof GameLibraryUI.GameLibraryKeyListener) {\n                        if (game.getKeyListeners()[j] instanceof GameLibraryKeyListener) {\n                            isGameLibraryKeyListenerAdded = true;\n                            break;\n                        }\n                    }\n\n                    if (!isGameLibraryKeyListenerAdded) {\n                        System.out.println(\"ADDING GAMELIBRARYLISTENER TO\" + game.getName());\n                        // game.addKeyListener(new GameLibraryUI.GameLibraryKeyListener());\n                        game.addKeyListener(handler.new GameLibraryKeyListener(this, coreUI));\n                    }\n                    if (!game.isLoaded()) {\n                        game.update();\n                        System.out.println(\"Secondary loading: \" + game.getName());\n                    }\n                } catch (RuntimeException ex) {\n                }\n\n\n            }\n        }\n    }\n\n     @Override\n    public void buildUI() {\n\n     /*\n      *\n      * TODO, ADD BUILD PART OF UI CODE HERE\n      *\n      */\n     }\n\n    public final void setAddGameUI() {\n\n        if (!isAddGameUILoaded) {\n\n            /////////////////////\n            //Create Components//\n            /////////////////////\n\n\n            ////ADD GAME UI////\n            JPanel glass = (JPanel) coreUI.getFrame().getGlassPane();\n            addGamePane = new AImagePane(\"Aurora_AddGame_BG.png\", new BorderLayout());\n\n            ////TOP PANEL COMPONENTS ////\n            //Major Panels\n            topPane = new JPanel(new BorderLayout());\n            topPane.setOpaque(false);\n            //UI components\n            btnCloseAddUI = new AButton(\"Aurora_Close_normal.png\", \"Aurora_Close_down.png\", \"Aurora_Close_over.png\");\n\n\n            ////CENTRAL PANEL COMPONENTS ////\n            //Major Panels\n            centerPane = new JPanel(new BorderLayout());\n            centerPane.setOpaque(false);\n            TopCenterPane = new JPanel(new BorderLayout());\n            TopCenterPane.setOpaque(false);\n            LeftTopCenter = new JPanel(new FlowLayout(FlowLayout.LEFT));\n            LeftTopCenter.setOpaque(false);\n            RightTopCenter = new JPanel(new FlowLayout(FlowLayout.LEFT));\n            RightTopCenter.setOpaque(false);\n            LeftBottomCenter = new JPanel(new FlowLayout(FlowLayout.LEFT, 0, 0));\n            LeftBottomCenter.setOpaque(false);\n            RightBottomCenter = new JPanel();\n            RightBottomCenter.setOpaque(true);\n            RightBottomContainer = new JPanel(new BorderLayout());\n            RightBottomContainer.setOpaque(false);\n            ContentPane = new JPanel(new BorderLayout(0, 0));\n            ContentPane.setOpaque(false);\n            //UI Components\n            lblLeftTitle = new JLabel(\"Name\");\n            lblRightTitle = new JLabel(\"Location\");\n            stepOne = new AImage(\"AddGame_step1_normal.png\");\n            stepTwo = new AImage(\"AddGame_step2_normal.png\");\n            coverPane = new AImagePane(\"AddGame_CoverBG.png\", new BorderLayout());\n            coverGame = new AImagePane(\"Blank-Case.png\", 220, 250);\n            gamesList = new JList();\n            gameLocator = new JFileChooser(System.getProperty(\"user.home\"));\n\n\n\n            ////BOTTOM PANEL COMPONENTS ////\n            //Major Panels\n            bottomPane = new AImagePane(\"AddGame_BottomBar.png\", new BorderLayout());\n            bottomTop = new JPanel(new FlowLayout(FlowLayout.CENTER));\n            bottomTop.setOpaque(false);\n            BottomCenterPane = new JPanel(new BorderLayout());\n            BottomCenterPane.setOpaque(false);\n            //UI Components\n            searchBG = new AImagePane(\"AddGame_SearchBG.png\", new BorderLayout());\n            searchArrow = new AImagePane(\"AddGame_SearchArrow_light.png\", new BorderLayout());\n            searchBox = new AImagePane(\"AddGame_SearchBox.png\", new BorderLayout());\n            gameSearchBar = new JTextField(\"Search For Game To Add...\");\n            lblAddTitle = new JLabel(\"GAME NAME\");\n            addSearchContainer = new JPanel(new FlowLayout(FlowLayout.CENTER));\n            addSearchContainer.setOpaque(false);\n            //Other components\n            GameSearch = new GameSearch(this, CoverDB, storage);\n            addGameToLibButton = new AButton(\"AddGame_AddToLib_normal.png\", \"AddGame_AddToLib_down.png\", \"AddGame_AddToLib_over.png\");\n            addGameToLibButton.setVisible(false);\n            addGameToLibButtonAnimator = new AAnimate(addGameToLibButton);\n\n\n            /////////////////////\n            //Set up Components//\n            /////////////////////\n\n\n            ////CENTRAL PANEL COMPONENTS ////\n            ///Set Up Title labels for both Left and Right side of the Central Panel\n            lblLeftTitle.setFont(coreUI.getDefaultFont().deriveFont(Font.BOLD, 32));\n            lblRightTitle.setFont(coreUI.getDefaultFont().deriveFont(Font.BOLD, 32));\n            ///Set Up 2 Panels containing the Left and Right titles at the top of the Content panel\n            LeftTopCenter.setPreferredSize(new Dimension(addGamePane.getImgIcon().getIconWidth() / 2, 75));\n            RightTopCenter.setPreferredSize(new Dimension(addGamePane.getImgIcon().getIconWidth() / 2, 75));\n            //SET Up Content Panels\n            LeftBottomCenter.setPreferredSize(new Dimension(490, coverPane.getImgIcon().getIconHeight()));\n            RightBottomCenter.setPreferredSize(new Dimension(490, coverPane.getImgIcon().getIconHeight()));\n            RightBottomCenter.setBackground(Color.DARK_GRAY);\n            RightBottomContainer.setPreferredSize(new Dimension(500, coverPane.getImgIcon().getIconHeight()));\n            //Set Up Panels containing the Game Cover Art\n            coverPane.setPreferredSize(new Dimension(coverPane.getImgIcon().getIconWidth(), coverPane.getImgIcon().getIconHeight()));\n            coverGame.setPreferredSize(new Dimension(220, 260));\n            //Set up List\n            gamesList.setPreferredSize(new Dimension(coverPane.getImgIcon().getIconWidth() + 80, coverPane.getImgIcon().getIconHeight()));\n            gamesList.setBackground(Color.DARK_GRAY);\n            gamesList.setForeground(Color.lightGray);\n            gamesList.setFont(coreUI.getDefaultFont().deriveFont(Font.BOLD, 19));\n            gamesList.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);\n            gamesList.setLayoutOrientation(JList.VERTICAL);\n            gamesList.setVisibleRowCount(10);\n            //List model for JList\n            listModel = new DefaultListModel();\n            gamesList.setModel(listModel);\n\n\n\n            //Set up File Chooser UI\n            UIManager.put(\"Viewport.background\", Color.GRAY);\n            UIManager.put(\"Viewport.foreground\", Color.WHITE);\n            UIManager.put(\"ScrollPane.background\", Color.GRAY);\n            UIManager.put(\"ComboBox.background\", Color.LIGHT_GRAY);\n            UIManager.put(\"ScrollBar.background\", Color.GRAY);\n            UIManager.put(\"Panel.background\", Color.GRAY);\n            UIManager.put(\"Panel.forground\", Color.WHITE);\n            UIManager.put(\"TextField.foreground\", Color.WHITE);\n            UIManager.put(\"TextField.background\", Color.DARK_GRAY);\n//            try {\n//                UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());\n//            } catch (ClassNotFoundException ex) {\n//                Logger.getLogger(GameLibraryUI.class.getName()).log(Level.SEVERE, null, ex);\n//            } catch (InstantiationException ex) {\n//                Logger.getLogger(GameLibraryUI.class.getName()).log(Level.SEVERE, null, ex);\n//            } catch (IllegalAccessException ex) {\n//                Logger.getLogger(GameLibraryUI.class.getName()).log(Level.SEVERE, null, ex);\n//            } catch (UnsupportedLookAndFeelException ex) {\n//                Logger.getLogger(GameLibraryUI.class.getName()).log(Level.SEVERE, null, ex);\n//            }\n\n            //Set up File Chooser\n            SwingUtilities.updateComponentTreeUI(gameLocator);\n\n            gameLocator.setApproveButtonText(\"Select\");\n            gameLocator.setDragEnabled(false);\n            gameLocator.setDialogType(JFileChooser.OPEN_DIALOG);\n            gameLocator.setMultiSelectionEnabled(false);\n            gameLocator.setAcceptAllFileFilterUsed(true);\n            gameLocator.setEnabled(true);\n            gameLocator.revalidate();\n\n            gameLocator.setPreferredSize(new Dimension(coverPane.getImgIcon().getIconWidth() * 2 + 100, coverPane.getImgIcon().getIconHeight() - 5));\n\n            try {\n                Field field = PopupFactory.class.getDeclaredField(\"forceHeavyWeightPopupKey\");\n                field.setAccessible(true);\n                gameLocator.putClientProperty(field.get(null), true);\n            } catch (Exception e) {\n                e.printStackTrace();\n            }\n\n\n\n            ////BOTTOM PANEL COMPONENTS ////\n            //Major Panel Setup\n            bottomPane.setPreferredSize(new Dimension(bottomPane.getImgIcon().getIconWidth(), bottomPane.getImgIcon().getIconHeight()));\n            ///Set Up Textfield where user will search for game to add\n            gameSearchBar.setFont(coreUI.getDefaultFont().deriveFont(Font.BOLD, 20));\n            gameSearchBar.setForeground(Color.DARK_GRAY);\n            gameSearchBar.setOpaque(false);\n            gameSearchBar.setBorder(null);\n            gameSearchBar.setPreferredSize(new Dimension(500, 50));\n            //Set up image sizes for the Search box\n            bottomTop.setPreferredSize(new Dimension(addGamePane.getImgIcon().getIconWidth(), 20));\n            searchBox.setPreferredSize(new Dimension(searchBox.getImgIcon().getIconWidth(), searchBox.getImgIcon().getIconHeight()));\n            searchBG.setPreferredSize(new Dimension(searchBG.getImgIcon().getIconWidth(), searchBG.getImgIcon().getIconHeight()));\n            searchArrow.setPreferredSize(new Dimension(searchArrow.getImgIcon().getIconWidth(), searchArrow.getImgIcon().getIconHeight()));\n            ///Set Up Title Label for Add Game UI\n            lblAddTitle.setFont(coreUI.getDefaultFont().deriveFont(Font.BOLD, 15));\n            lblAddTitle.setOpaque(false);\n            lblAddTitle.setForeground(Color.black);\n\n            ////ADD GAME UI////\n            //Set up glass panel to make the Add Game UI visible ontop of all the rest of the UI\n            glass.setVisible(true);\n            glass.setLayout(null);\n            glass.setOpaque(false);\n            //Set up the actuall Add Game UI panel\n            addGamePane.setLocation((coreUI.getFrame().getWidth() / 2) - (addGamePane.getImgIcon().getIconWidth() / 2), -380);\n            addGamePane.setSize(new Dimension(addGamePane.getImgIcon().getIconWidth(), addGamePane.getImgIcon().getIconHeight()));\n            addGamePane.revalidate();\n\n            addGameToLibButton.setLocation((coreUI.getFrame().getWidth() / 2) - (335 / 2), addGamePane.getImgIcon().getIconHeight() - 90);\n            addGameToLibButton.setSize(new Dimension(340, 140));\n\n\n            /////////////////\n            //Add To Panels//\n            /////////////////\n\n\n            ////TOP PANEL COMPONENTS ////\n            //Add the Close button to the Top most Panel\n            topPane.add(btnCloseAddUI, BorderLayout.EAST);\n            topPane.add(btnCloseAddUI, BorderLayout.EAST);\n\n\n            ////BOTTOM PANEL COMPONENTS ////\n            //Add components to form the Search Box\n            searchBox.add(gameSearchBar, BorderLayout.CENTER);\n            searchBG.add(searchArrow, BorderLayout.WEST);\n            searchBG.add(searchBox, BorderLayout.EAST);\n            addSearchContainer.add(searchBG);\n            //Add UI elements to the Bottom Panel in the Add Game UI\n            bottomTop.add(lblAddTitle);\n            bottomPane.add(addSearchContainer, BorderLayout.CENTER);\n            bottomPane.add(bottomTop, BorderLayout.PAGE_START);\n\n\n            ////CENTRAL PANEL COMPONENTS ////\n            //Add the Titles and Notificatons at the Top of the CENTRAL panel\n            LeftTopCenter.add(stepOne);\n            LeftTopCenter.add(lblLeftTitle);\n            RightTopCenter.add(stepTwo);\n            RightTopCenter.add(lblRightTitle);\n            //Content Panels\n            coverPane.add(coverGame, BorderLayout.SOUTH);\n            LeftBottomCenter.add(coverPane);\n            LeftBottomCenter.add(gamesList);\n\n            //Add the main Content to the Central Panel\n            ContentPane.add(LeftBottomCenter, BorderLayout.WEST);\n            RightBottomCenter.add(gameLocator);\n            RightBottomContainer.add(RightBottomCenter, BorderLayout.WEST);\n            ContentPane.add(RightBottomContainer, BorderLayout.EAST);\n            TopCenterPane.add(LeftTopCenter, BorderLayout.WEST);\n            TopCenterPane.add(RightTopCenter, BorderLayout.EAST);\n            centerPane.add(TopCenterPane, BorderLayout.NORTH);\n            centerPane.add(ContentPane, BorderLayout.CENTER);\n\n\n            ////ADD GAME UI////\n            //Add the TOP the CENTER and the BOTTOM panels to the Add Game UI\n            addGamePane.add(topPane, BorderLayout.PAGE_START);\n            addGamePane.add(centerPane, BorderLayout.CENTER);\n            addGamePane.add(b"],[1,"DefaultListModel;\nimport javax.swing.JFileChooser;\nimport javax.swing.JLabel;\nimport javax.swing.JList;\nimport javax.swing.JPanel;\nimport javax.swing.JScrollPane;\nimport javax.swing.JTextField;\nimport javax.swing.ListSelectionModel;\nimport javax.swing.PopupFactory;\nimport javax.swing.SwingUtilities;\nimport javax.swing.UIManager;\n\n/**\n * .---------------------------------------------------------------------------.\n * | GameLibraryUI :: Aurora App Class\n * .---------------------------------------------------------------------------.\n * |\n * | This class contains the UI for the GameLibrary Screen which has a Handler\n * | and a Logic class associated to it.\n * |\n * | This is an AuroraApp meaning it also implements the AuroraScreenUI\n * | interface.\n * |\n * .............................................................................\n *\n * @author Sammy <sguergachi at gmail.com> carlos <camachado@gmail.com>\n * <p/>\n */\npublic class GameLibraryUI extends AuroraApp {\n\n    /**\n     * Zoom In Button.\n     */\n    private AButton btnZoomPlus;\n\n    /**\n     * Zoom Out Button.\n     */\n    private AButton btnZoomLess;\n\n    /**\n     * Search Button to activate focus on Library Search Bar.\n     */\n    private AButton btnSearch;\n\n    /**\n     * Button to show add game UI.\n     */\n    private AButton btnShowAddGameUI;\n\n    /**\n     * Button to Exit out of Library Search.\n     */\n    private AButton removeSearchButton;\n\n    /**\n     * Button to Add Searched Game to Library.\n     */\n    private AButton addGameToLibButton;\n\n    /**\n     * Button to Close Add Game UI.\n     */\n    private AButton btnCloseAddUI;\n\n    /**\n     * Hover Button to navigate Right in Library.\n     */\n    private AHoverButton btnGameRight;\n\n    /**\n     * Hover Button to navigate Left in Library.\n     */\n    private AHoverButton btnGameLeft;\n\n    /**\n     * Panel Containing Hover Buttons and the Library Grids.\n     */\n    private JPanel paneLibraryContainer;\n\n    /**\n     * Panel Containing btnShowAddGameUI.\n     */\n    private JPanel pnlShowAddGameContainer;\n\n    /**\n     * Panel Containing imgSelectedGamePane.\n     */\n    private JPanel pnlSelectedGameContainer;\n\n    /**\n     * Panel Containing SearchBarBG.\n     */\n    private JPanel pnlSearchBar;\n\n    /**\n     * Panel Containing Text box for Search Bar.\n     */\n    private JPanel pnlSearchText;\n\n    /**\n     * Panel Containing Button Panel and Search Text box Pane for Search Box.\n     */\n    private JPanel pnlSearchContainer;\n\n    /**\n     * Panel Containing Search Button for Search Box.\n     */\n    private JPanel pnlSearchButton;\n\n    /**\n     * AddGameUI Panel Containing Search box.\n     */\n    private JPanel pnlAddGameSearchContainer;\n\n    /**\n     * AddGameUI Panel Containing Center Content for picking game to add.\n     */\n    private JPanel pnlCenter;\n\n    /**\n     * AddGameUI Panel Containing Top part of Bottom Panel.\n     */\n    private JPanel pnTopOfBottom;\n\n    /**\n     * AddGameUI Panel Containing Top part of Center Panel.\n     */\n    private JPanel pnlTopOfCenter;\n\n    /**\n     * AddGameUI Panel Containing Left part of Center Panel.\n     */\n    private JPanel pnlLeftOfTopCenter;\n\n    /**\n     * AddGameUI Panel Containing Right part of Top Part of Center Panel.\n     */\n    private JPanel pnlRightOfTopOfCenter;\n\n    /**\n     * AddGameUI Panel Containing Top part of Panel.\n     */\n    private JPanel pnlTopPane;\n\n    /**\n     * AddGameUI Panel Containing Left part of Bottom Part of Center Panel.\n     */\n    private JPanel pnlLeftOfBottomOfCenter;\n\n    /**\n     * AddGameUI Panel Containing Right part of Bottom Part of Center Panel.\n     */\n    private JPanel pnlRightOfBottomOfCenter;\n\n    /**\n     * AddGameUI Panel Containing Bottom part of Center Panel.\n     */\n    private JPanel pnlBottomOfCenter;\n\n    /**\n     * AddGameUI Panel Containing Right part of Bottom Panel.\n     */\n    private JPanel pnlRightOfBottomContainer;\n\n    /**\n     * AddGameUI Main Panel Containing All Other Panels.\n     */\n    private JPanel pnlAddGameContainer;\n\n    /**\n     * Panel Containing background image of Currently Selected game label.\n     */\n    private AImagePane imgSelectedGamePane;\n\n    /**\n     * Background image for Search Bar.\n     */\n    private AImagePane pnlSearchBarBG;\n\n    /**\n     * AddGameUI Image Panel representing AddGameUI.\n     */\n    private AImagePane pnlAddGamePane;\n\n    /**\n     * Image Panel Containing Search Text Box for Search Bar.\n     */\n    private AImagePane pnlSearchBG;\n\n    /**\n     * AddGameUI Arrow image pointing to search box.\n     */\n    private AImagePane pnlSearchArrow;\n\n    /**\n     * AddGameUI Background image for Search box.\n     */\n    private AImagePane pnlSearchBox;\n\n    /**\n     * AddGameUI Bottom image panel.\n     */\n    private AImagePane pnlBottomPane;\n\n    /**\n     * AddGameUI Panel that contains the Game Cover.\n     */\n    private AImagePane pnlCoverPane;\n\n    /**\n     * AddGameUI Image that is a Blank Case as a place holder Game Cover.\n     */\n    private AImagePane pnlBlankCoverGame;\n\n    /**\n     * AddGameUI Background Image of Button Panel.\n     */\n    private AImagePane pnlSearchButtonBG;\n\n    /**\n     * Image for keyboard icon.\n     */\n    private AImage imgKeyIco;\n\n    /**\n     * Image for Favorite logo on side of library.\n     */\n    private AImage imgFavorite;\n\n    /**\n     * Image of Blank Case used as placeholder.\n     */\n    private AImage imgBlank;\n\n    /**\n     * Image Step One badge.\n     */\n    private AImage stepOne;\n\n    /**\n     * Image Step Two badge.\n     */\n    private AImage stepTwo;\n\n    /**\n     * AddGameUI Title Label.\n     */\n    private JLabel lblAddTitle;\n\n    /**\n     * AddGameUI Label explaining left side of panel.\n     */\n    private JLabel lblLeftTitle;\n\n    /**\n     * AddGameUI Label explaining right side of panel.\n     */\n    private JLabel lblRightTitle;\n\n    /**\n     * AddGameUI Label explaining Keyboard action.\n     */\n    private JLabel lblKeyAction;\n\n    /**\n     * AddGameUI Label with Title of Selected Game.\n     */\n    public static JLabel lblGameName;\n\n    private ArrayList<AImagePane> gameCover;\n\n    private int zoom;\n\n    private GridManager GridSplit;\n\n    private int currentIndex;\n\n    private ArrayList<Boolean> loadedPanels;\n\n    private GridAnimation GridAnimate;\n\n    private JTextField gridSearchBar;\n\n    private GameLibraryHandler handler;\n\n    private GridSearch Search;\n\n    private ASimpleDB CoverDB;\n\n    private AAnimate addGameAnimator;\n\n    private JTextField gameSearchBar;\n\n    private GameSearch GameSearch;\n\n    private searchBoxHandler searchBoxHandler;\n\n    private searchFocusHandler searchFocusHandler;\n\n    private boolean addGameUI_Visible = false;\n\n    private JList gamesList;\n\n    private JScrollPane gameScrollPane;\n\n    private JFileChooser gameLocator;\n\n    private DefaultListModel listModel;\n\n    private String currentPath;\n\n    private AAnimate addGameToLibButtonAnimator;\n\n    private AuroraStorage storage;\n\n    private HoverButtonLeft moveLibraryLeftHandler;\n\n    private HoverButtonRight moveLibraryRightHandler;\n\n    private MoveToLastGrid GridMove;\n\n    private boolean isAddGameUILoaded = false;\n\n    private boolean isGameLibraryKeyListenerAdded = false;\n\n    private int SIZE_SearchBarWidth;\n\n    public static int gameCoverWidth;\n\n    public static int zoomButtonHeight;\n\n    public static int selectedGameBarHeight;\n\n    public static int selectedGameBarWidth;\n\n    public static int addGameWidth;\n\n    public static int addGameHeight;\n\n    public static int gameNameFontSize;\n\n    public static int gameCoverHeight;\n\n    private boolean isScreenLoaded = false;\n\n    private int btnBackWidth;\n\n    private int btnBackHeight;\n\n    private final DashboardUI dashboardUI;\n\n    private final AuroraCoreUI coreUI;\n\n    private final GameLibraryLogic logic;\n\n    /**\n     * .-----------------------------------------------------------------------.\n     * | GameLibraryUI(AuroraStorage, DashboardUI, AuroraCoreUI)\n     * .-----------------------------------------------------------------------.\n     * |\n     * | This is the Constructor of the GameLibraryUI UI class.\n     * |\n     * | The Constructor of Screen Classes must initialize/create both a\n     * | Handler and a Logic object which should contain the UI as a parameter\n     * |\n     * .........................................................................\n     *\n     * @param auroraStorage AuroraStorage\n     * @param dashboardUi   DashboardUI\n     * @param auroraCoreUI  AuroraCoreUI\n     *\n     */\n    public GameLibraryUI(final AuroraStorage auroraStorage,\n                         final DashboardUI dashboardUi,\n                         final AuroraCoreUI auroraCoreUI) {\n\n        this.coreUI = auroraCoreUI;\n        this.storage = auroraStorage;\n        this.dashboardUI = dashboardUi;\n\n        this.logic = new GameLibraryLogic(this);\n        this.handler = new GameLibraryHandler(this);\n\n        handler.setLogic(logic);\n        logic.setHandler(handler);\n    }\n\n    @Override\n    public final void loadUI() {\n\n        // Load All UI Components\n        // --------------------------------------------------------------------.\n\n        //* Create Components for Library *//\n\n        paneLibraryContainer = new JPanel(true);\n\n        imgFavorite = new AImage(\"Aurora_Favorite.png\");\n        imgBlank = new AImage(\"Aurora_Blank.png\");\n\n\n\n        btnGameRight = new AHoverButton(3,\n                \"Aurora_RightLib_normal.png\", \"Aurora_RightLib_over.png\");\n        btnGameLeft = new AHoverButton(3,\n                \"Aurora_LeftLib_normal.png\", \"Aurora_LeftLib_over.png\");\n\n\n        //* Zoom Buttons *//\n        btnZoomPlus = new AButton(\"Aurora_ZoomP_normal.png\",\n                \"Aurora_ZoomP_down.png\",\n                \"Aurora_ZoomP_over.png\", 0, zoomButtonHeight);\n        btnZoomLess = new AButton(\"Aurora_ZoomM_normal.png\",\n                \"Aurora_ZoomM_down.png\",\n                \"Aurora_ZoomM_over.png\", 0, zoomButtonHeight);\n\n\n        //* Key Board Naviagtion Icon *//\n        imgKeyIco = new AImage(\"KeyboardKeys/arrows.png\", coreUI\n                .getKeyIconWidth(), coreUI.getKeyIconHeight());\n        lblKeyAction = new JLabel(\" Move \");\n\n\n        //* Selected Game Name Bar *//\n        pnlSelectedGameContainer = new JPanel();\n\n        imgSelectedGamePane = new AImagePane(\"Aurora_SelectedGameBar.png\",\n                selectedGameBarWidth, selectedGameBarHeight,\n                new FlowLayout(FlowLayout.CENTER, 0, 5));\n\n        lblGameName = new JLabel(\"Select A Game For Info\");\n\n\n        //* Add Game Button *//\n        pnlShowAddGameContainer = new JPanel(new BorderLayout());\n\n        btnShowAddGameUI = new AButton(\"Aurora_Add_normal.png\",\n                \"Aurora_Add_down.png\",\n                \"Aurora_Add_over.png\", addGameWidth, addGameHeight);\n\n\n        //* Search Bar *//\n        pnlSearchBarBG = new AImagePane(\"SearchBar_inactive.png\",\n                new BorderLayout());\n        removeSearchButton = new AButton(\"SearchButtonBack_up.png\",\n                \"SearchButtonBack_down.png\", \"SearchButtonBack_over.png\");\n        gridSearchBar = new JTextField(\"Start Typing To Search...\");\n        btnSearch = new AButton(\"SearchButton_up.png\",\n                \"SearchButton_down.png\", \"SearchButton_over.png\");\n        pnlSearchButtonBG = new AImagePane(\"SearchButtonBG.png\",\n                new BorderLayout());\n        pnlSearchText = new JPanel(new BorderLayout());\n        pnlSearchButton = new JPanel(new BorderLayout());\n        pnlSearchContainer = new JPanel(new BorderLayout());\n        pnlSearchBar = new JPanel(new BorderLayout());\n\n        //* Create Grid Manager *//\n        GridSplit = new GridManager(2, 4, coreUI);\n\n        //* Grid Animator *//\n        this.GridAnimate = new GridAnimation(GridSplit, paneLibraryContainer);\n\n\n        //* Start Aurora Dabatase connection *//\n        try {\n            CoverDB = new ASimpleDB(\"AuroraDB\", \"AuroraTable\", false);\n        } catch (SQLException ex) {\n            Logger.getLogger(GameLibraryUI.class.getName()).log(Level.SEVERE,\n                    null, ex);\n        }\n\n        // Handlers\n        // --------------------------------------------------------------------.\n\n        ////Search Backend////\n        Search = new GridSearch(coreUI, this, GridSplit);\n\n\n\n    }\n\n    @Override\n    public final void buildUI() {\n        if (!isScreenLoaded) {\n            setSize();\n\n            //* Add Zoom Buttons *//\n//        coreUI.getTitlePanel().removeAll();\n//        coreUI.getTitlePanel().add(ZoomM);\n//        coreUI.getTitlePanel().add(coreUI.getTitleLabel());\n//        coreUI.getTitlePanel().add(ZoomP);\n\n            paneLibraryContainer.setOpaque(false);\n            paneLibraryContainer.setBackground(Color.red);\n            paneLibraryContainer.setLayout(new BorderLayout(0, 0));\n\n            lblKeyAction.setFont(coreUI.getDefaultFont().deriveFont(Font.PLAIN,\n                    coreUI.getKeysFontSize()));\n            lblKeyAction.setForeground(Color.YELLOW);\n\n\n\n            //* Selected Game Name Bar *//\n            pnlSelectedGameContainer.setOpaque(false);\n\n            lblGameName.setOpaque(false);\n            lblGameName.setFont(coreUI.getDefaultFont().deriveFont(Font.PLAIN,\n                    gameNameFontSize));\n            lblGameName.setForeground(Color.LIGHT_GRAY);\n\n            imgSelectedGamePane.setPreferredSize(new Dimension(\n                    selectedGameBarWidth, selectedGameBarHeight));\n            imgSelectedGamePane.add(lblGameName);\n            pnlSelectedGameContainer.add(imgSelectedGamePane);\n\n            //* Add Game Button *//\n            pnlShowAddGameContainer.setOpaque(false);\n            btnShowAddGameUI.addActionListener(handler.new ShowAddGameUiHandler(\n                    this));\n            pnlShowAddGameContainer.add(btnShowAddGameUI, BorderLayout.CENTER);\n\n\n            // Search Bar\n            // ----------------------------------------------------------------.\n\n            pnlSearchBarBG.setPreferredSize(new Dimension(SIZE_SearchBarWidth,\n                    50));\n            removeSearchButton.setPreferredSize(new Dimension(70, 51));\n\n            gridSearchBar.setOpaque(false);\n            gridSearchBar.setBorder(null);\n            gridSearchBar.setColumns(19);\n            gridSearchBar.setForeground(Color.darkGray);\n            gridSearchBar.setFont(coreUI.getDefaultFont().deriveFont(Font.BOLD,\n                    40));\n            gridSearchBar.setPreferredSize(new Dimension(880, 50));\n\n            btnSearch.setPreferredSize(new Dimension(70, 51));\n            btnSearch\n                    .addActionListener(handler.new searchButtonHandler(this));\n\n            pnlSearchButtonBG.setPreferredSize(new Dimension(70, 51));\n            pnlSearchButtonBG.add(btnSearch, BorderLayout.NORTH);\n\n            pnlSearchText.setOpaque(false);\n            pnlSearchText.add(gridSearchBar, BorderLayout.NORTH);\n\n            pnlSearchContainer.setOpaque(false);\n            pnlSearchContainer.add(pnlSearchButton, BorderLayout.WEST);\n            pnlSearchContainer.add(pnlSearchText, BorderLayout.CENTER);\n\n            pnlSearchButton.setOpaque(false);\n            pnlSearchButton.add(pnlSearchButtonBG, BorderLayout.NORTH);\n\n            pnlSearchBarBG.add(pnlSearchContainer, BorderLayout.WEST);\n            pnlSearchBarBG.validate();\n\n            pnlSearchBar.setOpaque(false);\n            pnlSearchBar.add(pnlSearchBarBG, BorderLayout.EAST);\n            pnlSearchBar.setPreferredSize(new Dimension(\n                    pnlSearchBar.getBounds().width,\n                    75));\n            pnlSearchBar.validate();\n\n            //* Initiate Library Grid *//\n            GridSplit.initiateGrid(0);\n\n\n\n            //* Add Components to Central Container *//\n            paneLibraryContainer.add(BorderLayout.WEST, imgFavorite);\n            paneLibraryContainer.add(BorderLayout.CENTER, GridSplit.getGrid(0));\n            paneLibraryContainer.add(BorderLayout.EAST, btnGameRight);\n\n\n\n            // Add Games to Library\n            // ----------------------------------------------------------------.\n\n            logic.addGamesToLibrary();\n\n            isScreenLoaded = true;\n            addToCanvas();\n\n\n        } else {\n            addToCanvas();\n        }\n    }\n\n    @Override\n    public final void addToCanvas() {\n        coreUI.getTitleLabel().setText(\"   Loading...   \");\n\n        attactchHandlers();\n\n        addToVolatileListenerBank(gridSearchBar);\n        addToVolatileListenerBank(coreUI.getBackgroundImagePane());\n        addToVolatileListenerBank(coreUI.getBottomImagePane());\n        addToVolatileListenerBank(coreUI.getCenterPanel());\n        addToVolatileListenerBank(coreUI.getSouthFromTopPanel());\n        addToVolatileListenerBank(coreUI.getFrameControlImagePane());\n        addToVolatileListenerBank(coreUI.getTopImagePane());\n        addToVolatileListenerBank(this.btnShowAddGameUI);\n        addToVolatileListenerBank(this.paneLibraryContainer);\n        addToVolatileListenerBank(this.imgSelectedGamePane);\n        addToVolatileListenerBank(this.btnGameLeft);\n        addToVolatileListenerBank(this.btnGameRight);\n\n\n        //* Add Search Bar to Top Bar *//\n        coreUI.getSouthFromTopPanel().add(BorderLayout.CENTER, pnlSearchBar);\n        coreUI.getSouthFromTopPanel().setPreferredSize(\n                new Dimension(coreUI.getSouthFromTopPanel().getWidth(), coreUI\n                .getFrameControlImagePane().getHeight()));\n        coreUI.getSouthFromTopPanel().revalidate();\n\n        //* Add AddGameButton to Bottom Bar *//\n        coreUI.getUserSpacePanel().setLayout(new BorderLayout());\n        coreUI.getUserSpacePanel().setVisible(true);\n        coreUI.getUserSpacePanel().add(pnlShowAddGameContainer);\n\n        //* Set up Bottom Bar *//\n        coreUI.getCenterFromBottomPanel().setLayout(new BorderLayout());\n        coreUI.getCenterFromBottomPanel().add(BorderLayout.CENTER,\n                pnlSelectedGameContainer);\n        coreUI.getCenterFromBottomPanel().add(BorderLayout.SOUTH, coreUI\n                .getUserSpacePanel());\n\n        //* Add To Key Action Panel *//\n        coreUI.getKeyToPressPanel().add(coreUI.getKeyIconImage());\n        coreUI.getKeyToPressPanel().add(coreUI.getKeyActionLabel());\n        coreUI.getKeyToPressPanel().add(imgKeyIco);\n        coreUI.getKeyToPressPanel().add(lblKeyAction);\n        coreUI.getHeaderOfCenterFromBottomPanel()\n                .setPreferredSize(new Dimension(coreUI.getFrame().getWidth(), 5));\n        coreUI.getHeaderOfCenterFromBottomPanel().revalidate();\n\n\n        //* Add Library Container to Center Panel *//\n        coreUI.getCenterPanel().add(BorderLayout.CENTER, paneLibraryContainer);\n        coreUI.getCenterPanel().repaint();\n\n\n\n        //* Finalize *//\n        coreUI.getTitleLabel().setText(\"   Game Library   \");\n        btnGameRight.requestFocusInWindow();\n        coreUI.getFrame().requestFocus();\n    }\n\n    public void attactchHandlers() {\n\n        searchBoxHandler = handler.new searchBoxHandler(this);\n        searchFocusHandler = handler.new searchFocusHandler(this);\n        gridSearchBar.addKeyListener(searchBoxHandler);\n        gridSearchBar.addFocusListener(searchFocusHandler);\n        gridSearchBar.addMouseListener(handler.new searchSelectHandler(this));\n\n        moveLibraryLeftHandler = handler.new HoverButtonLeft(this, coreUI);\n        moveLibraryRightHandler = handler.new HoverButtonRight(this, coreUI);\n\n        GridMove = handler.new MoveToLastGrid(this);\n\n        btnGameRight.setMouseListener(moveLibraryRightHandler);\n        btnGameLeft.setMouseListener(moveLibraryLeftHandler);\n\n        coreUI.getFrame()\n                .addKeyListener(handler.new searchRefocusListener(this));\n        coreUI.getFrame()\n                .addKeyListener(handler.new GameLibraryKeyListener(this, coreUI));\n        coreUI.getFrame()\n                .addMouseWheelListener(handler.new GridMouseWheelListener(this));\n\n        coreUI.getBackgroundImagePane()\n                .addKeyListener(handler.new searchRefocusListener(this));\n        coreUI.getBackgroundImagePane()\n                .addKeyListener(handler.new GameLibraryKeyListener(this, coreUI));\n        coreUI.getBackgroundImagePane()\n                .addMouseWheelListener(handler.new GridMouseWheelListener(this));\n\n        coreUI.getBottomImagePane()\n                .addKeyListener(handler.new searchRefocusListener(this));\n        coreUI.getBottomImagePane()\n                .addKeyListener(handler.new GameLibraryKeyListener(this, coreUI));\n        coreUI.getBottomImagePane()\n                .addMouseWheelListener(handler.new GridMouseWheelListener(this));\n\n        coreUI.getCenterPanel()\n                .addKeyListener(handler.new searchRefocusListener(this));\n        coreUI.getCenterPanel()\n                .addKeyListener(handler.new GameLibraryKeyListener(this, coreUI));\n        coreUI.getCenterPanel()\n                .addMouseWheelListener(handler.new GridMouseWheelListener(this));\n\n        coreUI.getSouthFromTopPanel()\n                .addKeyListener(handler.new searchRefocusListener(this));\n        coreUI.getSouthFromTopPanel()\n                .addKeyListener(handler.new GameLibraryKeyListener(this, coreUI));\n        coreUI.getSouthFromTopPanel()\n                .addMouseWheelListener(handler.new GridMouseWheelListener(this));\n\n        coreUI.getFrameControlImagePane()\n                .addKeyListener(handler.new searchRefocusListener(this));\n        coreUI.getFrameControlImagePane()\n                .addKeyListener(handler.new GameLibraryKeyListener(this, coreUI));\n        coreUI.getFrameControlImagePane()\n                .addMouseWheelListener(handler.new GridMouseWheelListener(this));\n\n        coreUI.getTopImagePane()\n                .addKeyListener(handler.new searchRefocusListener(this));\n        coreUI.getTopImagePane()\n                .addKeyListener(handler.new GameLibraryKeyListener(this, coreUI));\n        coreUI.getTopImagePane()\n                .addMouseWheelListener(handler.new GridMouseWheelListener(this));\n\n        this.btnShowAddGameUI.addKeyListener(handler.new searchRefocusListener(\n                this));\n        this.btnShowAddGameUI.addKeyListener(handler.new GameLibraryKeyListener(\n                this,\n                coreUI));\n\n        this.paneLibraryContainer.addKeyListener(\n                handler.new searchRefocusListener(this));\n        this.paneLibraryContainer\n                .addKeyListener(handler.new GameLibraryKeyListener(\n                this,\n                coreUI));\n\n        this.imgSelectedGamePane\n                .addKeyListener(handler.new searchRefocusListener(this));\n        this.imgSelectedGamePane\n                .addKeyListener(handler.new GameLibraryKeyListener(this, coreUI));\n\n        this.btnGameLeft.addKeyListener(handler.new searchRefocusListener(this));\n        this.btnGameLeft.addKeyListener(handler.new GameLibraryKeyListener(this,\n                coreUI));\n\n        this.btnGameRight\n                .addKeyListener(handler.new searchRefocusListener(this));\n        this.btnGameRight\n                .addKeyListener(handler.new GameLibraryKeyListener(this, coreUI));\n\n    }\n\n    public final void buildAddGameUI() {\n\n        if (!isAddGameUILoaded) {\n\n            \n            // Create Components\n            // ----------------------------------------------------------------.\n            \n\n\n            //* Get Glass Pane to Put UI On *//\n            JPanel glass = (JPanel) coreUI.getFrame().getGlassPane();\n            pnlAddGamePane = new AImagePane(\"Aurora_AddGame_BG.png\",\n                    new BorderLayout());\n\n            ////TOP PANEL COMPONENTS ////\n            //Major Panels\n            pnlTopPane = new JPanel(new BorderLayout());\n            pnlTopPane.setOpaque(false);\n            //UI components\n            btnCloseAddUI = new AButton(\"Aurora_Close_normal.png\",\n                    \"Aurora_Close_down.png\", \"Aurora_Close_over.png\");\n\n\n            ////CENTRAL PANEL COMPONENTS ////\n            //Major Panels\n            pnlCenter = new JPanel(new BorderLayout());\n            pnlCenter.setOpaque(false);\n            pnlTopOfCenter = new JPanel(new BorderLayout());\n            pnlTopOfCenter.setOpaque(false);\n            pnlLeftOfTopCenter = new JPanel(new FlowLayout(FlowLayout.LEFT));\n            pnlLeftOfTopCenter.setOpaque(false);\n            pnlRightOfTopOfCenter = new JPanel(new FlowLayout(FlowLayout.LEFT));\n            pnlRightOfTopOfCenter.setOpaque(false);\n            pnlLeftOfBottomOfCenter = new JPanel(new FlowLayout(FlowLayout.LEFT,\n                    0, 0));\n            pnlLeftOfBottomOfCenter.setOpaque(false);\n            pnlRightOfBottomOfCenter = new JPanel();\n            pnlRightOfBottomOfCenter.setOpaque(true);\n            pnlRightOfBottomContainer = new JPanel(new BorderLayout());\n            pnlRightOfBottomContainer.setOpaque(false);\n            pnlAddGameContainer = new JPanel(new BorderLayout(0, 0));\n            pnlAddGameContainer.setOpaque(false);\n            //UI Components\n            lblLeftTitle = new JLabel(\"Name\");\n            lblRightTitle = new JLabel(\"Location\");\n            stepOne = new AImage(\"AddGame_step1_normal.png\");\n            stepTwo = new AImage(\"AddGame_step2_normal.png\");\n            pnlCoverPane = new AImagePane(\"AddGame_CoverBG.png\",\n                    new FlowLayout(FlowLayout.LEFT,0, 10));\n            pnlBlankCoverGame = new AImagePane(\"Blank-Case.png\", 220, 250);\n            gamesList = new JList();\n            gameLocator = new JFileChooser(System.getProperty(\"user.home\"));\n\n\n\n            ////BOTTOM PANEL COMPONENTS ////\n            //Major Panels\n            pnlBottomPane = new AImagePane(\"AddGame_BottomBar.png\",\n                    new BorderLayout());\n            pnTopOfBottom = new JPanel(new FlowLayout(FlowLayout.CENTER));\n            pnTopOfBottom.setOpaque(false);\n            pnlBottomOfCenter = new JPanel(new BorderLayout());\n            pnlBottomOfCenter.setOpaque(false);\n            //UI Components\n            pnlSearchBG = new AImagePane(\"AddGame_SearchBG.png\",\n                    new BorderLayout());\n            pnlSearchArrow = new AImagePane(\"AddGame_SearchArrow_light.png\",\n                    new BorderLayout());\n            pnlSearchBox = new AImagePane(\"AddGame_SearchBox.png\",\n                    new BorderLayout());\n            gameSearchBar = new JTextField(\"Search For Game To Add...\");\n            lblAddTitle = new JLabel(\"GAME NAME\");\n            pnlAddGameSearchContainer = new JPanel(new FlowLayout(\n                    FlowLayout.CENTER));\n            pnlAddGameSearchContainer.setOpaque(false);\n            //Other components\n            GameSearch = new GameSearch(this, CoverDB, storage);\n            addGameToLibButton = new AButton(\"AddGame_AddToLib_normal.png\",\n                    \"AddGame_AddToLib_down.png\", \"AddGame_AddToLib_over.png\");\n            addGameToLibButton.setVisible(false);\n            addGameToLibButtonAnimator = new AAnimate(addGameToLibButton);\n\n\n            /////////////////////\n            //Set up Components//\n            /////////////////////\n\n\n            ////CENTRAL PANEL COMPONENTS ////\n            ///Set Up Title labels for both Left and Right side of the Central Panel\n            lblLeftTitle.setFont(coreUI.getDefaultFont().deriveFont(Font.BOLD,\n                    32));\n            lblRightTitle.setFont(coreUI.getDefaultFont().deriveFont(Font.BOLD,\n                    32));\n            ///Set Up 2 Panels containing the Left and Right titles at the top of the Content panel\n            pnlLeftOfTopCenter.setPreferredSize(new Dimension(pnlAddGamePane\n                    .getImgIcon().getIconWidth() / 2, 75));\n            pnlRightOfTopOfCenter.setPreferredSize(new Dimension(pnlAddGamePane\n                    .getImgIcon().getIconWidth() / 2, 75));\n            //SET Up Content Panels\n            pnlLeftOfBottomOfCenter.setPreferredSize(new Dimension(490,\n                    pnlCoverPane\n                    .getImgIcon().getIconHeight()));\n            pnlRightOfBottomOfCenter.setPreferredSize(new Dimension(490,\n                    pnlCoverPane\n                    .getImgIcon().getIconHeight()));\n            pnlRightOfBottomOfCenter.setBackground(Color.DARK_GRAY);\n            pnlRightOfBottomContainer.setPreferredSize(new Dimension(500,\n                    pnlCoverPane\n                    .getImgIcon().getIconHeight()));\n            //Set Up Panels containing the Game Cover Art\n            pnlCoverPane.setPreferredSize(new Dimension(pnlCoverPane\n                    .getImgIcon()\n                    .getIconWidth(), pnlCoverPane.getImgIcon().getIconHeight()));\n            pnlBlankCoverGame.setPreferredSize(new Dimension(220, 260));\n            //Set up List\n            gamesList.setPreferredSize(\n                    new Dimension(pnlCoverPane.getImgIcon().getIconWidth() + 80,\n                    pnlCoverPane.getImgIcon().getIconHeight()));\n            gamesList.setBackground(Color.DARK_GRAY);\n            gamesList.setForeground(Color.lightGray);\n            gamesList.setFont(coreUI.getDefaultFont().deriveFont(Font.BOLD, 19));\n            gamesList.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);\n            gamesList.setLayoutOrientation(JList.VERTICAL);\n            gamesList.setVisibleRowCount(10);\n            //List model for JList\n            listModel = new DefaultListModel();\n            gamesList.setModel(listModel);\n\n\n\n            //Set up File Chooser UI\n            UIManager.put(\"Viewport.background\", Color.GRAY);\n            UIManager.put(\"Viewport.foreground\", Color.WHITE);\n            UIManager.put(\"ScrollPane.background\", Color.GRAY);\n            UIManager.put(\"ComboBox.background\", Color.LIGHT_GRAY);\n            UIManager.put(\"ScrollBar.background\", Color.GRAY);\n            UIManager.put(\"Panel.background\", Color.GRAY);\n            UIManager.put(\"Panel.forground\", Color.WHITE);\n            UIManager.put(\"TextField.foreground\", Color.WHITE);\n            UIManager.put(\"TextField.background\", Color.DARK_GRAY);\n\n\n            //Set up File Chooser\n            SwingUtilities.updateComponentTreeUI(gameLocator);\n\n            gameLocator.setApproveButtonText(\"Select\");\n            gameLocator.setDragEnabled(false);\n            gameLocator.setDialogType(JFileChooser.OPEN_DIALOG);\n            gameLocator.setMultiSelectionEnabled(false);\n            gameLocator.setAcceptAllFileFilterUsed(true);\n            gameLocator.setEnabled(true);\n            gameLocator.revalidate();\n\n            gameLocator.setPreferredSize(new Dimension(pnlCoverPane.getImgIcon()\n                    .getIconWidth() * 2 + 100, pnlCoverPane.getImgIcon()\n                    .getIconHeight() - 5));\n\n            try {\n                Field field = PopupFactory.class.getDeclaredField(\n                        \"forceHeavyWeightPopupKey\");\n                field.setAccessible(true);\n                gameLocator.putClientProperty(field.get(null), true);\n            } catch (Exception e) {\n                e.printStackTrace();\n            }\n\n\n\n            ////BOTTOM PANEL COMPONENTS ////\n            //Major Panel Setup\n            pnlBottomPane\n                    .setPreferredSize(new Dimension(pnlBottomPane\n                    .getImgIcon()\n                    .getIconWidth(), pnlBottomPane.getImgIcon().getIconHeight()));\n            ///Set Up Textfield where user will search for game to add\n            gameSearchBar.setFont(coreUI.getDefaultFont().deriveFont(Font.BOLD,\n                    20));\n            gameSearchBar.setForeground(Color.DARK_GRAY);\n            gameSearchBar.setOpaque(false);\n            gameSearchBar.setBorder(null);\n            gameSearchBar.setPreferredSize(new Dimension(500, 50));\n            //Set up image sizes for the Search box\n            pnTopOfBottom.setPreferredSize(new Dimension(pnlAddGamePane\n                    .getImgIcon()\n                    .getIconWidth(), 20));\n            pnlSearchBox.setPreferredSize(new Dimension(pnlSearchBox.getImgIcon()\n                    .getIconWidth(), pnlSearchBox.getImgIcon().getIconHeight()));\n            pnlSearchBG.setPreferredSize(new Dimension(pnlSearchBG.getImgIcon()\n                    .getIconWidth(), pnlSearchBG.getImgIcon().getIconHeight()));\n            pnlSearchArrow.setPreferredSize(new Dimension(pnlSearchArrow.getImgIcon()\n                    .getIconWidth(), pnlSearchArrow.getImgIcon().getIconHeight()));\n            ///Set Up Title Label for Add Game UI\n            lblAddTitle.setFont(coreUI.getDefaultFont()\n                    .deriveFont(Font.BOLD, 15));\n            lblAddTitle.setOpaque(false);\n            lblAddTitle.setForeground(Color.black);\n\n            ////ADD GAME UI////\n            //Set up glass panel to make the Add Game UI visible ontop of all the rest of the UI\n            glass.setVisible(true);\n            glass.setLayout(null);\n            glass.setOpaque(false);\n            //Set up the actuall Add Game UI panel\n            pnlAddGamePane.setLocation((coreUI.getFrame().getWidth() / 2)\n                                       - (pnlAddGamePane.getImgIcon()\n                    .getIconWidth()\n                                          / 2), -380);\n            pnlAddGamePane\n                    .setSize(\n                    new Dimension(pnlAddGamePane.getImgIcon()\n                    .getIconWidth(), pnlAddGamePane.getImgIcon().getIconHeight()));\n            pnlAddGamePane.revalidate();\n\n            addGameToLibButton.setLocation((coreUI.getFrame().getWidth() / 2)\n                                           - (335 / 2), pnlAddGamePane\n                    .getImgIcon()\n                    .getIconHeight() - 90);\n            addGameToLibButton.setSize(new Dimension(340, 140));\n\n\n            /////////////////\n            //Add To Panels//\n            /////////////////\n\n\n            ////TOP PANEL COMPONENTS ////\n            //Add the Close button to the Top most Panel\n            pnlTopPane.add(btnCloseAddUI, BorderLayout.EAST);\n            pnlTopPane.add(btnCloseAddUI, BorderLayout.EAST);\n\n\n            ////BOTTOM PANEL COMPONENTS ////\n            //Add components to form the Search Box\n            pnlSearchBox.add(gameSearchBar, BorderLayout.CENTER);\n            pnlSearchBG.add(pnlSearchArrow, BorderLayout.WEST);\n            pnlSearchBG.add(pnlSearchBox, BorderLayout.EAST);\n            pnlAddGameSearchContainer.add(pnlSearchBG);\n            //Add UI elements to the Bottom Panel in the Add Game UI\n            pnTopOfBottom.add(lblAddTitle);\n            pnlBottomPane.add(pnlAddGameSearchContainer, BorderLayout.CENTER);\n            pnlBottomPane.add(pnTopOfBottom, BorderLayout.PAGE_START);\n\n\n            ////CENTRAL PANEL COMPONENTS ////\n            //Add the Titles and Notificatons at the Top of the CENTRAL panel\n            pnlLeftOfTopCenter.add(stepOne);\n            pnlLeftOfTopCenter.add(lblLeftTitle);\n            pnlRightOfTopOfCenter.add(stepTwo);\n            pnlRightOfTopOfCenter.add(lblRightTitle);\n            //Content Panels\n            pnlCoverPane.add(pnlBlankCoverGame, BorderLayout.SOUTH);\n            pnlLeftOfBottomOfCenter.add(pnlCoverPane);\n            pnlLeftOfBottomOfCenter.add(gamesList);\n\n            //Add the main Content to the Central Panel\n            pnlAddGameContainer.add(pnlLeftOfBottomOfCenter, BorderLayout.WEST);\n            pnlRightOfBottomOfCenter.add(gameLocator);\n            pnlRightOfBottomContainer\n                    .add(pnlRightOfBottomOfCenter, BorderLayout.WEST);\n            pnlAddGameContainer\n                    .add(pnlRightOfBottomContainer, BorderLayout.EAST);\n            pnlTopOfCenter.add(pnlLeftOfTopCenter, BorderLayout.WEST);\n            pnlTopOfCenter.add(pnlRightOfTopOfCenter, BorderLayout.EAST);\n            pnlCenter.add(pnlTopOfCenter, BorderLayout.NORTH);\n            pnlCenter.add(pnlAddGameContainer, BorderLayout.CENTER);\n\n\n            ////ADD GAME UI////\n            //Add the TOP the CENTER and the BOTTOM panels to the Add Game UI\n            pnlAddGamePane.add(pnlTopPane, BorderLayout.PAGE_START);\n            pnlAddGamePane.add(pnlCenter, BorderLayout.CENTER);\n            pnlAddGamePane.add(pnlB"],[0,"otto"]],"start1":1805,"start2":1805,"length1":34672,"length2":36114},{"diffs":[[0,"  glass.add("],[-1,"a"],[1,"pnlA"],[0,"ddGamePane);"]],"start1":38022,"start2":38022,"length1":25,"length2":28},{"diffs":[[0,"ler("],[-1,"this));\n\n            addGamePane.addMouseListener(handler.new EmptyMouseHandler()); //so that you dont select behind the Panel\n            gameSearchBar.addFocusListener(handler.new addGameFocusHandler(this));\n            gameSearchBar.addMouseListener(handler.new addGameMouseHandler(this));\n            gameSearchBar.addKeyListener(handler.new addGameSearchBoxHandler(this));\n            gamesList.addListSelectionListener(handler.new SelectListHandler(this));\n            gameLocator.setFileFilter(handler.new ExecutableFilterHandler(coreUI));\n            gameLocator.addActionListener(handler.new ExecutableChooserHandler(this, gameLocator));\n            addGameToLibButton.addActionListener(handler.new AddToLibraryHandler(this));\n\n            ////////////\n            //Finalize//\n            ////////////\n\n\n            addGamePane.setVisible(false);\n            addGameAnimator = new AAnimate(a"],[1,"\n                    this));\n\n            pnlAddGamePane.addMouseListener(handler.new EmptyMouseHandler()); //so that you dont select behind the Panel\n            gameSearchBar\n                    .addFocusListener(handler.new addGameFocusHandler(this));\n            gameSearchBar\n                    .addMouseListener(handler.new addGameMouseHandler(this));\n            gameSearchBar.addKeyListener(handler.new addGameSearchBoxHandler(\n                    this));\n            gamesList.addListSelectionListener(handler.new SelectListHandler(\n                    this));\n            gameLocator.setFileFilter(\n                    handler.new ExecutableFilterHandler(coreUI));\n            gameLocator.addActionListener(handler.new ExecutableChooserHandler(\n                    this, gameLocator));\n            addGameToLibButton\n                    .addActionListener(handler.new AddToLibraryHandler(this));\n\n            ////////////\n            //Finalize//\n            ////////////\n\n\n            pnlAddGamePane.setVisible(false);\n            addGameAnimator = new AAnimate(pnlA"],[0,"ddGa"]],"start1":38247,"start2":38247,"length1":909,"length2":1086},{"diffs":[[0,"();\n            "],[-1,"a"],[1,"pnlA"],[0,"ddGamePane.reval"]],"start1":39383,"start2":39383,"length1":33,"length2":36},{"diffs":[[0,"oid "],[-1,"checkNotifiers() {\n\n        if (stepOne.getImgURl().equals(\"AddGame_step1_green.png\") && stepTwo.getImgURl().equals(\"AddGame_step2_green.png\")) {\n            //Animate the Button bellow Add Game UI\n            addGameToLibButton.setVisible(true);\n            addGameToLibButtonAnimator.setInitialLocation((coreUI.getFrame().getWidth() / 2) - (335 / 2), addGamePane.getImgIcon().getIconHeight() - 180);\n            addGameToLibButtonAnimator.moveVertical(addGamePane.getImgIcon().getIconHeight() - 55, 20);\n            addGameToLibButtonAnimator.removeAllListeners();\n        }\n\n        if ((stepOne.getImgURl().equals(\"AddGame_step1_red.png\") || stepTwo.getImgURl().equals(\"AddGame_step2_red.png\")) && addGameToLibButton.isVisible()) {\n\n\n            addGameToLibButtonAnimator.moveVertical(0, 16);\n            addGameToLibButtonAnimator.addPostAnimationListener(new APostHandler() {\n                @Override\n                public void actionPerformed() {\n                    addGameToLibButton.setVisible(false);\n                }\n            });\n        }\n\n    }\n\n    public void showAddGameUI() {\n        addGameUI_Visible = true;\n        //prep Add Game UI\n        setAddGameUI();\n\n\n        //Animate\n        addGameAnimator.setInitialLocation((coreUI.getFrame().getWidth() / 2) - (addGamePane.getImgIcon()"],[1,"showAddGameUI() {\n        addGameUI_Visible = true;\n        //prep Add Game UI\n        buildAddGameUI();\n\n\n        //Animate\n        addGameAnimator.setInitialLocation((coreUI.getFrame().getWidth() / 2)\n                                           - (pnlAddGamePane.getImgIcon()\n                "],[0,".get"]],"start1":39529,"start2":39529,"length1":1319,"length2":301},{"diffs":[[0,"nly\n        "],[-1,"a"],[1,"pnlA"],[0,"ddGamePane.r"]],"start1":39908,"start2":39908,"length1":25,"length2":28},{"diffs":[[0," && !GridAnimate"],[-1,""],[0,""],[1,"\n                "],[0,".getAnimator2()."]],"start1":40928,"start2":40928,"length1":32,"length2":49},{"diffs":[[0,"tArray()"],[-1,".indexOf(GameBack"],[1,"\n                    .indexOf(paneLibraryContainer"],[0,".getComp"]],"start1":41174,"start2":41174,"length1":33,"length2":66},{"diffs":[[0,"                "],[-1,"img"],[1,"btn"],[0,"GameLeft.mouseEx"]],"start1":41370,"start2":41370,"length1":35,"length2":35},{"diffs":[[0,"    "],[-1,"GameBack.remove(0);\n                    GameBack.add(imgFavorite, BorderLayout.WEST, 0);\n\n                } else {\n                    //Left Button\n                    GameBack.remove(0);\n                    GameBack.add(imgGameLeft, BorderLayout.WEST, 0);\n                }\n                //Add GameCover Covers\n\n                GridAnimate.moveLeft(currentIndex);\n\n                GameBack.add(BorderLayout.EAST, imgGameRight);\n\n                try {\n                    load(currentIndex - 1);\n                } catch (MalformedURLException ex) {\n                    Logger.getLogger(GameLibraryUI.class.getName()).log(Level.SEVERE, null, ex);\n                }\n            }\n\n            coreUI.getCenterPanel().removeAll();\n            coreUI.getCenterPanel().add(BorderLayout.CENTER, GameBack);\n\n            GameBack.repaint();\n            GameBack"],[1,"paneLibraryContainer.remove(0);\n                    paneLibraryContainer.add(imgFavorite, BorderLayout.WEST, 0);\n\n                } else {\n                    //Left Button\n                    paneLibraryContainer.remove(0);\n                    paneLibraryContainer.add(btnGameLeft, BorderLayout.WEST, 0);\n                }\n                //Add GameCover Covers\n\n                GridAnimate.moveLeft(currentIndex);\n\n                paneLibraryContainer.add(BorderLayout.EAST, btnGameRight);\n\n                try {\n                    logic.loadGames(currentIndex - 1);\n                } catch (MalformedURLException ex) {\n                    Logger.getLogger(GameLibraryUI.class.getName()).log(\n                            Level.SEVERE, null, ex);\n                }\n            }\n\n            coreUI.getCenterPanel().removeAll();\n            coreUI.getCenterPanel().add(BorderLayout.CENTER,\n                    paneLibraryContainer);\n\n            paneLibraryContainer.repaint();\n            paneLibraryContainer"],[0,".rev"]],"start1":41673,"start2":41673,"length1":864,"length2":1020},{"diffs":[[0,"  }\n        "],[-1,"img"],[1,"btn"],[0,"GameLeft.mou"]],"start1":42758,"start2":42758,"length1":27,"length2":27},{"diffs":[[0,"mate"],[-1,".getAnimator2().isAnimating()) {\n\n            currentIndex = GridSplit.getArray().indexOf(GameBack.getComponent(1));\n\n\n            if (currentIndex < GridSplit.getArray().size() - 1) {\n\n                GridSplit.incrementVisibleGridIndex();\n\n                GameBack.remove(0);\n                GameBack.add(imgGameLeft, BorderLayout.WEST, 0);\n\n\n                GameBack.add(imgGameRight, BorderLayout.EAST, 2);\n\n                GridAnimate.moveRight(currentIndex);\n\n\n                try {\n                    load(currentIndex + 1);\n                } catch (MalformedURLException ex) {\n                    Logger.getLogger(GameLibraryUI.class.getName()).log(Level.SEVERE, null, ex);\n                }\n\n\n\n                //of on last Grid then dont show right arrow button\n                if (!(currentIndex + 1 < GridSplit.getArray().size() - 1)) {\n\n                    GameBack.remove(imgGameRight);\n                    GameBack.add(imgBlank, BorderLayout.EAST, 2);\n                    imgGameRight.mouseExit();\n                }\n            }\n\n            coreUI.getCenterPanel().removeAll();\n            coreUI.getCenterPanel().add(BorderLayout.CENTER, GameBack);\n\n            GameBack.repaint();\n            GameBack.revalidate();\n\n            coreUI.getFrame().requestFocus();\n\n        }\n        imgGameRight.mouseExit();\n    }\n\n    //GETTER AND SETTERS\n    public AAnimate getAddGameAnimator() {\n        return addGameAnimator;\n    }\n\n     public JLabel getLblGameName() {\n        return lblGameNam"],[1,"\n                .getAnimator2().isAnimating()) {\n\n            currentIndex = GridSplit.getArray()\n                    .indexOf(paneLibraryContainer.getComponent(1));\n\n\n            if (currentIndex < GridSplit.getArray().size() - 1) {\n\n                GridSplit.incrementVisibleGridIndex();\n\n                paneLibraryContainer.remove(0);\n                paneLibraryContainer.add(btnGameLeft, BorderLayout.WEST, 0);\n\n\n                paneLibraryContainer.add(btnGameRight, BorderLayout.EAST, 2);\n\n                GridAnimate.moveRight(currentIndex);\n\n\n                try {\n                    logic.loadGames(currentIndex + 1);\n                } catch (MalformedURLException ex) {\n                    Logger.getLogger(GameLibraryUI.class.getName()).log(\n                            Level.SEVERE, null, ex);\n                }\n\n\n\n                //of on last Grid then dont show right arrow button\n                if (!(currentIndex + 1 < GridSplit.getArray().size() - 1)) {\n\n                    paneLibraryContainer.remove(btnGameRight);\n                    paneLibraryContainer.add(imgBlank, BorderLayout.EAST, 2);\n                    btnGameRight.mouseExit();\n                }\n            }\n\n            coreUI.getCenterPanel().removeAll();\n            coreUI.getCenterPanel().add(BorderLayout.CENTER,\n                    paneLibraryContainer);\n\n            paneLibraryContainer.repaint();\n            paneLibraryContainer.revalidate();\n\n            coreUI.getFrame().requestFocus();\n\n        }\n        btnGameRight.mouseExit();\n    }\n\n    public void setSize() {\n\n        int Ratio = (coreUI.getFrame().getWidth() - coreUI.getFrame()\n                .getHeight()) / 2;\n        System.out.println(\"Ratio \" + Ratio);\n        System.out.println(\"Height \" + coreUI.getFrame().getHeight());\n        System.out.println(\"Width \" + coreUI.getFrame().getWidth());\n        if (coreUI.isLargeScreen()) {\n            gameCoverHeight = coreUI.getFrame().getHeight() / 3 - (Ratio\n                                                                   / 10)\n                              + 5;\n            gameCoverWidth = coreUI.getFrame().getWidth() / 5\n                             - (Ratio / 10) - 5;\n            zoomButtonHeight = 30;\n            selectedGameBarHeight = 65;\n            selectedGameBarWidth = 380;\n            addGameWidth = 351;\n            addGameHeight = 51;\n            gameNameFontSize = 35;\n            SIZE_SearchBarWidth = 880;\n            btnBackWidth = 0;\n            btnBackHeight = 0;\n\n        } else {\n            btnBackWidth = 30;\n            btnBackHeight = 35;\n            gameCoverHeight = coreUI.getFrame().getHeight() / 3 - (Ratio\n                                                                   / 10);\n            gameCoverWidth = coreUI.getFrame().getWidth() / 5\n                             - (Ratio / 10);\n            zoomButtonHeight = 25;\n            addGameWidth = 300;\n            addGameHeight = 40;\n            selectedGameBarHeight = 60;\n            selectedGameBarWidth = 360;\n            gameNameFontSize = 32;\n            SIZE_SearchBarWidth = coreUI.getFrame().getWidth() / 2 + coreUI\n                    .getControlWidth() / 2;\n        }\n\n\n    }\n\n    //GETTER AND SETTERS\n    public AAnimate getAddGameAnimator() {\n        return addGameAnimator;\n    }\n\n    public JLabel getLblGameName() {\n        return lblGameName;\n    }\n\n    public static int getGameCoverHeight() {\n        return gameCoverHeight;\n    }\n\n    public static void setGameCoverHeight(int gameCoverHeight) {\n        GameLibraryUI.gameCoverHeight = gameCoverHeight;\n    }\n\n    public boolean IsGameLibraryKeyListenerAdded() {\n        return isGameLibraryKeyListenerAdded;\n    }\n\n    public void setIsGameLibraryKeyListenerAdded(\n            boolean isGameLibraryKeyListenerAdded) {\n        this.isGameLibraryKeyListenerAdded = isGameLibraryKeyListenerAdded;\n    }\n\n    /**\n     * Size Value.\n     * <p/>\n     * @return int\n     */\n    public final int getGameCoverWidth() {\n        return gameCoverWidth;\n    }\n\n    /**\n     * Set Size Value.\n     * <p/>\n     * @param gameCoverWidth\n     */\n    public final void setGameCoverWidth(int gameCoverWidth) {\n        GameLibraryUI.gameCoverWidth = gameCoverWidth;\n    }\n\n    public static int getGameNameFontSize() {\n        return gameNameFontSize;\n    }\n\n    public static void setGameNameFontSize(int gameNameFontSize) {\n        GameLibraryUI.gameNameFontSize = gameNameFontSiz"],[0,"e;\n "]],"start1":42951,"start2":42951,"length1":1512,"length2":4444},{"diffs":[[0,"\n        return "],[-1,"M"],[1,"m"],[0,"oveLibraryLeftHa"]],"start1":47457,"start2":47457,"length1":33,"length2":33},{"diffs":[[0," return "],[-1,"M"],[1,"m"],[0,"oveLibra"]],"start1":47570,"start2":47570,"length1":17,"length2":17},{"diffs":[[0," return "],[-1,"add"],[1,"pnlAddGame"],[0,"SearchCo"]],"start1":47852,"start2":47852,"length1":19,"length2":26},{"diffs":[[0," return "],[-1,"BottomCenterPane"],[1,"pnlBottomOfCenter"],[0,";\n    }\n"]],"start1":47943,"start2":47943,"length1":32,"length2":33},{"diffs":[[0,"urn "],[-1,"addGamePane;\n    }\n\n    public AddGameHandler getAddGameHandler() {\n        return addGameHandler"],[1,"pnlAddGamePane"],[0,";\n  "]],"start1":48847,"start2":48847,"length1":105,"length2":22},{"diffs":[[0,"     return "],[-1,"c"],[1,"pnlC"],[0,"overPane;\n  "]],"start1":48916,"start2":48916,"length1":25,"length2":28},{"diffs":[[0,"   this."],[-1,"c"],[1,"pnlBlankC"],[0,"overGame"]],"start1":49007,"start2":49007,"length1":17,"length2":25},{"diffs":[[0," return "],[-1,"c"],[1,"pnlBlankC"],[0,"overGame"]],"start1":49099,"start2":49099,"length1":17,"length2":25},{"diffs":[[0," return "],[-1,"b"],[1,"pnlB"],[0,"ottomPan"]],"start1":49180,"start2":49180,"length1":17,"length2":20},{"diffs":[[0,"     return "],[-1,"s"],[1,"pnlS"],[0,"earchArrow;\n"]],"start1":49328,"start2":49328,"length1":25,"length2":28},{"diffs":[[0,"     return "],[-1,"s"],[1,"pnlS"],[0,"earchBG;\n   "]],"start1":49404,"start2":49404,"length1":25,"length2":28},{"diffs":[[0," return "],[-1,"s"],[1,"pnlS"],[0,"earchBox"]],"start1":49482,"start2":49482,"length1":17,"length2":20},{"diffs":[[0," return "],[1,"pnlSearch"],[0,"Button"],[-1,"Pane"],[0,";\n    }\n"]],"start1":49705,"start2":49705,"length1":26,"length2":31},{"diffs":[[0," return "],[-1,"GameBack"],[1,"paneLibraryContainer"],[0,";\n    }\n"]],"start1":49778,"start2":49778,"length1":24,"length2":36},{"diffs":[[0," get"],[-1,"SIZE_AddGameHeight() {\n        return SIZE_AddGameHeight;\n    }\n\n    public int getSIZE_AddGameWidth() {\n        return SIZE_AddGameWidth;\n    }\n\n    public int getSIZE_FramePanePadding() {\n        return SIZE_FramePanePadding"],[1,"AddGameHeight() {\n        return addGameHeight;\n    }\n\n    public int getAddGameWidth() {\n        return addGameWidth"],[0,";\n  "]],"start1":49981,"start2":49981,"length1":234,"length2":125},{"diffs":[[0,"\n        return "],[-1,"SIZE_G"],[1,"g"],[0,"ameCoverHeight;\n"]],"start1":50153,"start2":50153,"length1":38,"length2":33},{"diffs":[[0," return "],[-1,"SIZE_G"],[1,"g"],[0,"ameCover"]],"start1":50242,"start2":50242,"length1":22,"length2":17},{"diffs":[[0,"urn "],[-1,"SIZE_GameNameFont;\n    }\n\n    public int getSIZE_SelectedGameBarHeight() {\n        return SIZE_SelectedGameBarHeight;\n    }\n\n    public int getSIZE_SelectedGameBarWidth() {\n        return SIZE_SelectedGameBarWidth;\n    }\n\n    public int getSIZE_ZoomButtonHeight() {\n        return SIZE_Z"],[1,"gameNameFontSize;\n    }\n\n    public int getSelectedGameBarHeight() {\n        return selectedGameBarHeight;\n    }\n\n    public int getSelectedGameBarWidth() {\n        return selectedGameBarWidth;\n    }\n\n    public int getZoomButtonHeight() {\n        return z"],[0,"oomB"]],"start1":50324,"start2":50324,"length1":295,"length2":264},{"diffs":[[0,"     return "],[-1,""],[0,""],[1,"pnl"],[0,"SearchBarBG;"]],"start1":50794,"start2":50794,"length1":24,"length2":27},{"diffs":[[0," return "],[1,"btn"],[0,"Search"],[-1,"Button"],[0,";\n    }\n"]],"start1":50875,"start2":50875,"length1":28,"length2":25},{"diffs":[[0,"     return "],[-1,""],[0,""],[1,"pnl"],[0,"SearchButton"]],"start1":50948,"start2":50948,"length1":24,"length2":27},{"diffs":[[0,"     return "],[-1,""],[0,""],[1,"pnl"],[0,"SearchContai"]],"start1":51030,"start2":51030,"length1":24,"length2":27},{"diffs":[[0," return "],[1,"pnl"],[0,"Search"],[-1,"Pane"],[1,"Bar"],[0,";\n    }\n"]],"start1":51112,"start2":51112,"length1":26,"length2":28},{"diffs":[[0," return "],[-1,""],[0,""],[1,"pnl"],[0,"Selected"]],"start1":51195,"start2":51195,"length1":16,"length2":19},{"diffs":[[0," return "],[1,"pnlSearch"],[0,"Text"],[-1,"Pane"],[0,";\n    }\n"]],"start1":51348,"start2":51348,"length1":24,"length2":29},{"diffs":[[0," return "],[-1,"ZoomM"],[1,"btnZoomLess"],[0,";\n    }\n"]],"start1":51417,"start2":51417,"length1":21,"length2":27},{"diffs":[[0,"urn "],[-1,"ZoomP;\n    }\n\n    public ActionListener getA() {\n        return a"],[1,"btnZoomPlus"],[0,";\n  "]],"start1":51488,"start2":51488,"length1":73,"length2":19},{"diffs":[[0,"turn btn"],[1,"Show"],[0,"AddGame"],[1,"UI"],[0,";\n    }\n"]],"start1":51559,"start2":51559,"length1":23,"length2":29},{"diffs":[[0," }\n\n"],[-1,"    public int getCurrentPanel() {\n        return currentPanel;\n    }\n\n"],[0,"    "]],"start1":51738,"start2":51738,"length1":79,"length2":8},{"diffs":[[0,"     return "],[-1,"img"],[1,"btn"],[0,"GameLeft;\n  "]],"start1":52162,"start2":52162,"length1":27,"length2":27},{"diffs":[[0," return "],[-1,"img"],[1,"btn"],[0,"GameRigh"]],"start1":52245,"start2":52245,"length1":19,"length2":19},{"diffs":[[0," }\n\n"],[-1,"    public DashboardUI getObj() {\n        return dashboardUI;\n    }\n\n"],[0,"    "]],"start1":52590,"start2":52590,"length1":77,"length2":8},{"diffs":[[0," getDash"],[1,"board"],[0,"UI() {\n "]],"start1":52823,"start2":52823,"length1":16,"length2":21},{"diffs":[[0,"\n    }\n\n"],[1,"    public GameLibraryLogic getLogic() {\n        return logic;\n    }"],[0,"\n}\n"]],"start1":52870,"start2":52870,"length1":11,"length2":79}]],"length":52949,"saved":false}
{"ts":1353688794954,"patch":[[{"diffs":[[0,"       \n"],[-1,"\n\n"],[0,"        "]],"start1":25136,"start2":25136,"length1":18,"length2":16},{"diffs":[[0,"\n\n            //"],[-1,"//"],[1,"* "],[0,"TOP PANEL COMPON"]],"start1":25371,"start2":25371,"length1":34,"length2":34},{"diffs":[[0,"NTS "],[1,"*"],[0,"//"],[-1,"//\n            //Major Panels"],[0,"\n   "]],"start1":25406,"start2":25406,"length1":39,"length2":11},{"diffs":[[0,"e);\n"],[-1,"            //UI components\n"],[0,"    "]],"start1":25508,"start2":25508,"length1":36,"length2":8},{"diffs":[[0,"\n\n            //"],[-1,"//"],[1,"* "],[0,"CENTRAL PANEL CO"]],"start1":25650,"start2":25650,"length1":34,"length2":34},{"diffs":[[0,"NTS "],[1,"*"],[0,"//"],[-1,"//\n            //Major Panels"],[0,"\n   "]],"start1":25689,"start2":25689,"length1":39,"length2":11},{"diffs":[[0,"e);\n"],[-1,"            //UI Components"],[0,"\n"],[1,""],[0,"    "]],"start1":26673,"start2":26673,"length1":36,"length2":9},{"diffs":[[0,"\n\n            //"],[-1,"//"],[1,"* "],[0,"BOTTOM PANEL COM"]],"start1":27217,"start2":27217,"length1":34,"length2":34},{"diffs":[[0,"NTS "],[1,"*"],[0,"//"],[-1,"//\n            //Major Panels"],[0,"\n   "]],"start1":27255,"start2":27255,"length1":39,"length2":11},{"diffs":[[0,"e);\n"],[-1,"            //UI Components\n"],[0,"    "]],"start1":27599,"start2":27599,"length1":36,"length2":8},{"diffs":[[0,"e);\n"],[-1,"            //Other components"],[0,"\n"],[1,""],[0,"    "]],"start1":28219,"start2":28219,"length1":39,"length2":9},{"diffs":[[0,";\n\n\n"],[-1,"            /////////////////////"],[0,"\n   "]],"start1":28567,"start2":28567,"length1":41,"length2":8},{"diffs":[[0,"      //"],[1," "],[0,"Set "],[-1,"u"],[1,"U"],[0,"p Compon"]],"start1":28578,"start2":28578,"length1":21,"length2":22},{"diffs":[[0,"mponents"],[-1,"//"],[0,"\n       "]],"start1":28596,"start2":28596,"length1":18,"length2":16},{"diffs":[[0,"      //"],[-1,"/"],[-1,"//////////////////"],[1," ----------------------------------------------------------------.\n"],[0,"\n\n\n     "]],"start1":28611,"start2":28611,"length1":35,"length2":83}]],"length":52764,"saved":false}
{"ts":1353688872780,"patch":[[{"diffs":[[0,"\n\n            //"],[-1,"//"],[1,"* "],[0,"CENTRAL PANEL CO"]],"start1":28687,"start2":28687,"length1":34,"length2":34},{"diffs":[[0,"ANEL COMPONENTS "],[1,"*"],[0,"//"],[1,"\n            \n            "],[0,"//"],[1,"*"],[0,"\n            ///"]],"start1":28714,"start2":28714,"length1":36,"length2":64},{"diffs":[[0,"*\n            //"],[-1,"/"],[1," "],[0,"Set Up Title lab"]],"start1":28761,"start2":28761,"length1":33,"length2":33},{"diffs":[[0,"r both Left "],[1,"\n            // "],[0,"and Right si"]],"start1":28800,"start2":28800,"length1":24,"length2":40},{"diffs":[[0,"e Central Panel\n"],[1,"            //*\n"],[0,"            lblL"]],"start1":28848,"start2":28848,"length1":32,"length2":48},{"diffs":[[0,");\n            /"],[1,"/*\n            "],[0,"//Set Up 2 Panel"]],"start1":29088,"start2":29088,"length1":32,"length2":47},{"diffs":[[0,"he Left and "],[1,"\n            // "],[0,"Right titles"]],"start1":29149,"start2":29149,"length1":24,"length2":40},{"diffs":[[0,"ntent panel\n"],[1,"            //*\n"],[0,"            "]],"start1":29210,"start2":29210,"length1":24,"length2":40}]],"length":52871,"saved":false}
{"ts":1353688918111,"patch":[[{"diffs":[[0,"          32));\n"],[1,"                    \n"],[0,"            //*\n"]],"start1":29075,"start2":29075,"length1":32,"length2":53},{"diffs":[[0,"          //"],[1," "],[0,"Set Up 2 Pan"]],"start1":29130,"start2":29130,"length1":24,"length2":25},{"diffs":[[0,"));\n"],[-1,"            //SET Up Content Panels"],[0,"\n"],[1,""],[0,"    "]],"start1":29533,"start2":29533,"length1":44,"length2":9},{"diffs":[[0,"IconHeight()));\n"],[1,"                    \n"],[0,"            //Se"]],"start1":30068,"start2":30068,"length1":32,"length2":53},{"diffs":[[0,"          //"],[1,"* "],[0,"Set Up Panel"]],"start1":30107,"start2":30107,"length1":24,"length2":26},{"diffs":[[0,"over Art"],[1," *//"],[0,"\n       "]],"start1":30156,"start2":30156,"length1":16,"length2":20},{"diffs":[[0,"220, 260));\n"],[1,"            \n"],[0,"            "]],"start1":30415,"start2":30415,"length1":24,"length2":37},{"diffs":[[0,"  //"],[1,"* "],[0,"Set up "],[-1,"List"],[1,"Game List *//"],[0,"\n   "]],"start1":30450,"start2":30450,"length1":19,"length2":30}]],"length":52909,"saved":false}
{"ts":1353689467987,"patch":[[{"diffs":[[0,"        "],[-1,"//"],[1,"\n            //* "],[0,"List mod"]],"start1":31040,"start2":31040,"length1":18,"length2":33},{"diffs":[[0,"or JList"],[1," Containing Game Names *//"],[0,"\n       "]],"start1":31077,"start2":31077,"length1":16,"length2":42},{"diffs":[[0,"\n\n            //"],[1,"* "],[0,"Set up File Choo"]],"start1":31204,"start2":31204,"length1":32,"length2":34},{"diffs":[[0,"ooser UI"],[1," (Windows only) *//"],[0,"\n       "]],"start1":31236,"start2":31236,"length1":16,"length2":35},{"diffs":[[0,"          //"],[1,"* "],[0,"Set up File "]],"start1":31838,"start2":31838,"length1":24,"length2":26},{"diffs":[[0," Chooser"],[1," *//"],[0,"\n       "]],"start1":31863,"start2":31863,"length1":16,"length2":20},{"diffs":[[0,"\n\n            //"],[-1,"//"],[1,"* "],[0,"BOTTOM PANEL COM"]],"start1":32842,"start2":32842,"length1":34,"length2":34},{"diffs":[[0,"NTS "],[1,"*"],[0,"//"],[-1,"//\n            //Major Panel Setup"],[0,"\n   "]],"start1":32880,"start2":32880,"length1":44,"length2":11},{"diffs":[[0,"));\n            "],[-1,"///"],[1,"        \n            //* "],[0,"Set Up Textfield"]],"start1":33093,"start2":33093,"length1":35,"length2":57},{"diffs":[[0,"e to add"],[1," *//"],[0,"\n       "]],"start1":33181,"start2":33181,"length1":16,"length2":20},{"diffs":[[0,"            "],[-1,"//"],[1,"\n            //* "],[0,"Set up image"]],"start1":33513,"start2":33513,"length1":26,"length2":41},{"diffs":[[0,"arch box"],[1," *//"],[0,"\n       "]],"start1":33571,"start2":33571,"length1":16,"length2":20},{"diffs":[[0,"      //"],[-1,"/"],[1,"* "],[0,"Set Up T"]],"start1":34234,"start2":34234,"length1":17,"length2":18},{"diffs":[[0," for Add Game UI"],[1," *//"],[0,"\n            lbl"]],"start1":34262,"start2":34262,"length1":32,"length2":36},{"diffs":[[0,"        "],[-1,"////ADD GAME UI////"],[0,"\n       "]],"start1":34487,"start2":34487,"length1":35,"length2":16},{"diffs":[[0,"          //"],[1,"* "],[0,"Set up glass"]],"start1":34498,"start2":34498,"length1":24,"length2":26},{"diffs":[[0,"nel "],[-1,"to make the Add Game UI visible ontop of all the rest of the UI"],[1,"*//"],[0,"\n   "]],"start1":34527,"start2":34527,"length1":71,"length2":11},{"diffs":[[0,"  //"],[1,"* "],[0,"Set "],[-1,"up the actuall"],[1,"Location for"],[0," Add"]],"start1":34652,"start2":34652,"length1":26,"length2":26},{"diffs":[[0,"ame UI panel"],[1,"s *//"],[0,"\n           "]],"start1":34680,"start2":34680,"length1":24,"length2":29},{"diffs":[[0,"  //"],[-1,"///////////////\n            //"],[1," "],[0,"Add "],[-1,"To Panels//"],[1,"to Components"],[0,"\n   "]],"start1":35482,"start2":35482,"length1":53,"length2":26},{"diffs":[[0,"      //"],[-1,"///////////////"],[1," ----------------------------------------------------------------."],[0,"\n\n\n     "]],"start1":35511,"start2":35511,"length1":31,"length2":82},{"diffs":[[0,"      //"],[-1,"//"],[1,"* "],[0,"TOP PANE"]],"start1":35594,"start2":35594,"length1":18,"length2":18},{"diffs":[[0,"ANEL COMPONENTS "],[1,"*"],[0,"//"],[-1,"//"],[1,"\n            "],[0,"\n            //A"]],"start1":35609,"start2":35609,"length1":36,"length2":48},{"diffs":[[0," \n            //"],[1,"* "],[0,"Add the Close bu"]],"start1":35640,"start2":35640,"length1":32,"length2":34},{"diffs":[[0,"p most Panel"],[1," *//"],[0,"\n           "]],"start1":35688,"start2":35688,"length1":24,"length2":28},{"diffs":[[0,"      //"],[-1,"//"],[1,"* "],[0,"BOTTOM P"]],"start1":35837,"start2":35837,"length1":18,"length2":18},{"diffs":[[0,"ANEL COMPONENTS "],[-1,"//"],[1,"*"],[0,"//\n            /"]],"start1":35855,"start2":35855,"length1":34,"length2":33},{"diffs":[[0,"            "],[-1,"//"],[1,"\n            //* "],[0,"Add componen"]],"start1":35875,"start2":35875,"length1":26,"length2":41},{"diffs":[[0,"arch Box"],[1," *//"],[0,"\n       "]],"start1":35933,"start2":35933,"length1":16,"length2":20},{"diffs":[[0,"            "],[-1,"//"],[1,"\n            //* "],[0,"Add UI eleme"]],"start1":36194,"start2":36194,"length1":26,"length2":41},{"diffs":[[0," the Add Game UI"],[1," *//"],[0,"\n            pnT"]],"start1":36261,"start2":36261,"length1":32,"length2":36},{"diffs":[[0,"      //"],[-1,"//"],[1,"* "],[0,"CENTRAL "]],"start1":36484,"start2":36484,"length1":18,"length2":18},{"diffs":[[0,"PONENTS "],[1,"*"],[0,"//"],[-1,"//"],[1,"\n            "],[0,"\n       "]],"start1":36511,"start2":36511,"length1":20,"length2":32},{"diffs":[[0," \n            //"],[1,"* "],[0,"Add the Titles a"]],"start1":36534,"start2":36534,"length1":32,"length2":34},{"diffs":[[0,"and "],[-1,"Notificaton"],[1,"Badge"],[0,"s at"]],"start1":36567,"start2":36567,"length1":19,"length2":13},{"diffs":[[0,"ENTRAL panel"],[1," *//"],[0,"\n           "]],"start1":36597,"start2":36597,"length1":24,"length2":28},{"diffs":[[0,"e);\n"],[-1,"            //Content Panels"],[1,""],[0,"\n   "]],"start1":36807,"start2":36807,"length1":36,"length2":8},{"diffs":[[0,"\n\n            //"],[1,"* "],[0,"Add the main Con"]],"start1":36987,"start2":36987,"length1":32,"length2":34},{"diffs":[[0,"he Central Panel"],[1," *//"],[0,"\n            pnl"]],"start1":37030,"start2":37030,"length1":32,"length2":36}]],"length":52991,"saved":false}
{"ts":1353689552169,"patch":[[{"diffs":[[0,"  //"],[-1,"//ADD GAME UI////"],[1,"*"],[0,"\n   "]],"start1":37689,"start2":37689,"length1":25,"length2":9},{"diffs":[[0,"          //"],[1," "],[0,"Add the TOP "]],"start1":37697,"start2":37697,"length1":24,"length2":25},{"diffs":[[0,"e BOTTOM"],[1,"\n            //"],[0," panels "]],"start1":37739,"start2":37739,"length1":16,"length2":31},{"diffs":[[0,"the Add Game UI\n"],[1,"            //*\n"],[0,"            pnlA"]],"start1":37773,"start2":37773,"length1":32,"length2":48},{"diffs":[[0,"ND);"],[-1,"\n            //Finish by adding the Add Game UI to the Glass."],[0,"\n\n  "]],"start1":38003,"start2":38003,"length1":69,"length2":8},{"diffs":[[0,"  //"],[-1,"//////////\n            //"],[1," "],[0,"Handlers"],[-1,"//"],[0,"\n   "]],"start1":38104,"start2":38104,"length1":43,"length2":17},{"diffs":[[0,"          //"],[-1,"//////////"],[1," ----------------------------------------------------------------."],[0,"\n\n\n         "]],"start1":38120,"start2":38120,"length1":34,"length2":90},{"diffs":[[0,"  //"],[-1,"//////////\n            //"],[1," "],[0,"Finalize"],[-1,"//"],[0,"\n   "]],"start1":39196,"start2":39196,"length1":43,"length2":17},{"diffs":[[0,"      //"],[-1,"//////////"],[1," ----------------------------------------------------------------."],[0,"\n\n\n     "]],"start1":39216,"start2":39216,"length1":26,"length2":82}]],"length":53006,"saved":false}
{"ts":1353689587367,"patch":[[{"diffs":[[0,"ue;\n"],[-1,"        //prep Add Game UI"],[0,"\n   "]],"start1":39638,"start2":39638,"length1":34,"length2":8},{"diffs":[[0,"();\n\n\n        //"],[1,"* "],[0,"Animate"],[1," Add Game UI *//"],[0,"\n        addGame"]],"start1":39665,"start2":39665,"length1":39,"length2":57},{"diffs":[[0,"32);"],[-1," //even only"],[0,"\n   "]],"start1":39944,"start2":39944,"length1":20,"length2":8}]],"length":52986,"saved":false}
{"ts":1353689615449,"patch":[[{"diffs":[[0,"Animate "],[1,"Down "],[0,"Add Game"]],"start1":39683,"start2":39683,"length1":16,"length2":21},{"diffs":[[0,"    "],[-1,"//Animate"],[1,"\n        //* Animate Up Add Game UI *//"],[0,"\n   "]],"start1":40370,"start2":40370,"length1":17,"length2":47},{"diffs":[[0,");\n\n"],[-1,"        //restore\n        //GameSearch.resetCover();\n"],[0,"    "]],"start1":40459,"start2":40459,"length1":61,"length2":8}]],"length":52968,"saved":false}
{"ts":1353689632445,"patch":[[{"diffs":[[0,"tton.repaint();\n"],[1,"        \n        //TODO Fix Search Bar Focus\n"],[0,"        gridSear"]],"start1":40629,"start2":40629,"length1":32,"length2":77}]],"length":53013,"saved":false}
{"ts":1353689670740,"patch":[[{"diffs":[[0,"      //"],[-1,"/"],[1,"*\n            // "],[0,"Get The "]],"start1":41065,"start2":41065,"length1":17,"length2":33},{"diffs":[[0,"isplayed"],[-1,"///"],[0,"\n       "]],"start1":41132,"start2":41132,"length1":19,"length2":16},{"diffs":[[0,"      //"],[-1,"/"],[1," "],[0,"Refer to"]],"start1":41147,"start2":41147,"length1":17,"length2":17},{"diffs":[[0," find it"],[1,"\n            "],[0,"//"],[-1,"/"],[1,"*"],[0,"\n       "]],"start1":41200,"start2":41200,"length1":19,"length2":32},{"diffs":[[0,"      //"],[1,"* "],[0,"Stop fro"]],"start1":41348,"start2":41348,"length1":16,"length2":18},{"diffs":[[0,"far left"],[1," *//"],[0,"\n       "]],"start1":41377,"start2":41377,"length1":16,"length2":20}]],"length":53045,"saved":false}
{"ts":1353689683307,"patch":[[{"diffs":[[0,"());"],[-1," //so that you dont select behind the Panel"],[0,"\n   "]],"start1":38381,"start2":38381,"length1":51,"length2":8}]],"length":53002,"saved":false}
{"ts":1353689705807,"patch":[[{"diffs":[[0,"-----.\n\n"],[-1,"\n\n"],[0,"        "]],"start1":28679,"start2":28679,"length1":18,"length2":16},{"diffs":[[0,"-------------.\n\n"],[-1,"\n"],[0,"            //* "]],"start1":35569,"start2":35569,"length1":33,"length2":32},{"diffs":[[0,"-------------.\n\n"],[-1,"\n"],[0,"            btnC"]],"start1":38181,"start2":38181,"length1":33,"length2":32},{"diffs":[[0,"andler(this));\n\n"],[1,"\n"],[0,"            // F"]],"start1":39123,"start2":39123,"length1":32,"length2":33},{"diffs":[[0,"-----.\n\n"],[-1,"\n"],[0,"        "]],"start1":39238,"start2":39238,"length1":17,"length2":16}]],"length":52998,"saved":false}
{"ts":1353689829304,"patch":[[{"diffs":[[0,"  //"],[-1,"GETTER AND SETTERS"],[1," Getters and Setters\n    // ----------------------------------------------------------------.\n            "],[0,"\n   "]],"start1":46198,"start2":46198,"length1":26,"length2":114}]],"length":53086,"saved":false}
